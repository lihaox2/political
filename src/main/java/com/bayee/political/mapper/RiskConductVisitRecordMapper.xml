<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bayee.political.mapper.RiskConductVisitRecordMapper">
  <resultMap id="BaseResultMap" type="com.bayee.political.domain.RiskConductVisitRecord">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="police_id" jdbcType="VARCHAR" property="policeId" />
    <result column="type" jdbcType="INTEGER" property="type" />
    <result column="input_time" jdbcType="TIMESTAMP" property="inputTime" />
    <result column="content" jdbcType="VARCHAR" property="content" />
    <result column="remarks" jdbcType="VARCHAR" property="remarks" />
    <result column="type_name" jdbcType="VARCHAR" property="typeName" />
    <result column="deduction_score" jdbcType="DOUBLE" property="deductionScore" />
    <result column="creation_date" jdbcType="TIMESTAMP" property="creationDate" />
    <result column="update_date" jdbcType="TIMESTAMP" property="updateDate" />
    <result column="bigTypeName" jdbcType="VARCHAR" property="bigTypeName" />
    <result column="smallTypeName" jdbcType="VARCHAR" property="smallTypeName" />
    <result column="bigType" jdbcType="INTEGER" property="bigType" />
    <result column="smallType" jdbcType="INTEGER" property="smallType" />
    <result column="origin_id" property="originId" jdbcType="INTEGER" />
    <result column="is_really" property="isReally" jdbcType="INTEGER" />
    <result column="is_effective" property="isEffective" jdbcType="INTEGER" />
    <result column="appealState" property="appealState" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, police_id, type, input_time, content, remarks, deduction_score, origin_id, is_really, 
    is_effective, creation_date, update_date
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select r.*,t.name as type_name, t.id as smallType, t.name as smallTypeName, (
      select parent_id from risk_conduct_visit_type where id = r.type) as bigType
         , (select name from risk_conduct_visit_type where id in (
      select parent_id from risk_conduct_visit_type where id = r.type)) as bigTypeName from risk_conduct_visit_record r
    left join risk_conduct_visit_type t on r.type = t.id
    where r.id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from risk_conduct_visit_record
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.bayee.political.domain.RiskConductVisitRecord" >
    insert into risk_conduct_visit_record (id, police_id, type, 
      input_time, content, remarks, 
      deduction_score, origin_id, is_really, 
      is_effective, creation_date, update_date
      )
    values (#{id,jdbcType=INTEGER}, #{policeId,jdbcType=VARCHAR}, #{type,jdbcType=INTEGER}, 
      #{inputTime,jdbcType=TIMESTAMP}, #{content,jdbcType=VARCHAR}, #{remarks,jdbcType=VARCHAR}, 
      #{deductionScore,jdbcType=DOUBLE}, #{originId,jdbcType=INTEGER}, #{isReally,jdbcType=INTEGER}, 
      #{isEffective,jdbcType=INTEGER}, #{creationDate,jdbcType=TIMESTAMP}, #{updateDate,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.bayee.political.domain.RiskConductVisitRecord" >
    insert into risk_conduct_visit_record
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="policeId != null" >
        police_id,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="inputTime != null" >
        input_time,
      </if>
      <if test="content != null" >
        content,
      </if>
      <if test="remarks != null" >
        remarks,
      </if>
      <if test="deductionScore != null" >
        deduction_score,
      </if>
      <if test="originId != null" >
        origin_id,
      </if>
      <if test="isReally != null" >
        is_really,
      </if>
      <if test="isEffective != null" >
        is_effective,
      </if>
      <if test="creationDate != null" >
        creation_date,
      </if>
      <if test="updateDate != null" >
        update_date,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="policeId != null" >
        #{policeId,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        #{type,jdbcType=INTEGER},
      </if>
      <if test="inputTime != null" >
        #{inputTime,jdbcType=TIMESTAMP},
      </if>
      <if test="content != null" >
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="remarks != null" >
        #{remarks,jdbcType=VARCHAR},
      </if>
      <if test="deductionScore != null" >
        #{deductionScore,jdbcType=DOUBLE},
      </if>
      <if test="originId != null" >
        #{originId,jdbcType=INTEGER},
      </if>
      <if test="isReally != null" >
        #{isReally,jdbcType=INTEGER},
      </if>
      <if test="isEffective != null" >
        #{isEffective,jdbcType=INTEGER},
      </if>
      <if test="creationDate != null" >
        #{creationDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateDate != null" >
        #{updateDate,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.bayee.political.domain.RiskConductVisitRecord" >
    update risk_conduct_visit_record
    <set >
      <if test="policeId != null" >
        police_id = #{policeId,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="inputTime != null" >
        input_time = #{inputTime,jdbcType=TIMESTAMP},
      </if>
      <if test="content != null" >
        content = #{content,jdbcType=VARCHAR},
      </if>
      <if test="remarks != null" >
        remarks = #{remarks,jdbcType=VARCHAR},
      </if>
      <if test="deductionScore != null" >
        deduction_score = #{deductionScore,jdbcType=DOUBLE},
      </if>
      <if test="originId != null" >
        origin_id = #{originId,jdbcType=INTEGER},
      </if>
      <if test="isReally != null" >
        is_really = #{isReally,jdbcType=INTEGER},
      </if>
      <if test="isEffective != null" >
        is_effective = #{isEffective,jdbcType=INTEGER},
      </if>
      <if test="creationDate != null" >
        creation_date = #{creationDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateDate != null" >
        update_date = #{updateDate,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.bayee.political.domain.RiskConductVisitRecord" >
    update risk_conduct_visit_record
    set police_id = #{policeId,jdbcType=VARCHAR},
      type = #{type,jdbcType=INTEGER},
      input_time = #{inputTime,jdbcType=TIMESTAMP},
      content = #{content,jdbcType=VARCHAR},
      remarks = #{remarks,jdbcType=VARCHAR},
      deduction_score = #{deductionScore,jdbcType=DOUBLE},
      origin_id = #{originId,jdbcType=INTEGER},
      is_really = #{isReally,jdbcType=INTEGER},
      is_effective = #{isEffective,jdbcType=INTEGER},
      creation_date = #{creationDate,jdbcType=TIMESTAMP},
      update_date = #{updateDate,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
  
  <select id="riskConductVisitRecordList" resultMap="BaseResultMap">
  	SELECT
  	    r.*,t.name as type_name,
    ifnull((select state from risk_record_verify where type_id = 1012 and module_id = r.id), 0) as appealState
  	FROM risk_conduct_visit_record r,risk_conduct_visit_type t WHERE
	 r.police_id=#{policeId} and r.type=t.id
	 <if test="timeType == 1">
	    and DATE_FORMAT(r.creation_date, '%Y-%m')&gt;=#{lastMonthTime} and DATE_FORMAT(r.creation_date, '%Y-%m')&lt;=#{dateTime}
	</if>
    <if test="timeType == 2">
	    and DATE_FORMAT(r.creation_date, '%Y-%m')=#{dateTime}
	</if>
	 ORDER BY r.id desc
  </select>

  <select id="findRiskConductVisitRecordList" resultMap="BaseResultMap">
    select * from risk_conduct_visit_record
    where is_effective = 1 and is_really = 1 and police_id=#{policeId}
      and DATE_FORMAT(creation_date, '%Y-%m')=DATE_FORMAT(#{date}, '%Y-%m')
  </select>

  <select id="countByTypeId" resultType="Integer">
    select count(1) from risk_conduct_visit_record where type = #{typeId}
  </select>

  <select id="riskConductVisitRecordPage" resultMap="BaseResultMap">
    select r.*,t.name as type_name, t.name as smallTypeName, (select name from risk_conduct_visit_type where id in (
      select parent_id from risk_conduct_visit_type where id = r.type)) as bigTypeName from risk_conduct_visit_record r
    left join risk_conduct_visit_type t on r.type = t.id
    left join user u on u.police_id = r.police_id
    where 1 = 1
    <if test="key != null and  key !='' ">
      and (u.police_id like concat('%', #{key}, '%') or u.name like concat('%', #{key}, '%') or r.content like concat('%', #{key}, '%'))
    </if>
    <if test="list != null and list.size > 0">
      AND (t.id in (
      <foreach collection="list" item="item" separator=",">
        #{item}
      </foreach>
      ) or t.parent_id in (
      <foreach collection="list" item="item" separator=",">
        #{item}
      </foreach>
      ))
    </if>
    <if test="deptId != null">
      and u.department_id = #{deptId}
    </if>
    order by r.id desc
    limit #{pageIndex}, #{pageSize}
  </select>

  <select id="getRiskConductVisitRecordPageCount" resultType="Integer">
    select count(1) from risk_conduct_visit_record r
    left join risk_conduct_visit_type t on r.type = t.id
    left join user u on u.police_id = r.police_id
    where 1 = 1
    <if test="key != null and  key !='' ">
      and (u.police_id like concat('%', #{key}, '%') or u.name like concat('%', #{key}, '%') or r.content like concat('%', #{key}, '%'))
    </if>
    <if test="list != null and list.size > 0">
      AND (t.id in (
        <foreach collection="list" item="item" separator=",">
          #{item}
        </foreach>
      ) or t.parent_id in (
        <foreach collection="list" item="item" separator=",">
          #{item}
        </foreach>
      ))
    </if>
    <if test="deptId != null">
      and u.department_id = #{deptId}
    </if>
  </select>

  <select id="countAll" resultType="Integer">
    select count(1) from risk_conduct_visit_record
  </select>

  <select id="findConductVisitRecordYearAndMonth" resultMap="BaseResultMap">
    select * from risk_conduct_visit_record a where 1 = 1
    <if test="conductVisitRecordYear != null and conductVisitRecordYear != ''">
      and DATE_FORMAT(creation_date,'%Y') = #{conductVisitRecordYear}
    </if>
    <if test="conductVisitRecordMonth != null and conductVisitRecordMonth != ''">
      and DATE_FORMAT(creation_date,'%m') = #{conductVisitRecordMonth}
    </if>
    <if test="policeId != null and policeId != ''">
      and a.police_id = #{policeId}
    </if>
    order by creation_date desc
  </select>

</mapper>