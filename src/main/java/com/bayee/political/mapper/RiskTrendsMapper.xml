<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bayee.political.mapper.RiskTrendsMapper">
  <resultMap id="BaseResultMap" type="com.bayee.political.domain.RiskTrends">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="num" jdbcType="INTEGER" property="num" />
    <result column="creation_date" jdbcType="DATE" property="creationDate" />
    <result column="month" jdbcType="VARCHAR" property="month" />
    <result column="name" jdbcType="VARCHAR" property="name" />
  </resultMap>
  
  <resultMap id="BaseResultMapTwo" type="com.bayee.political.domain.RiskReportRecord" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="police_id" property="policeId" jdbcType="VARCHAR" />
    <result column="year" property="year" jdbcType="VARCHAR" />
    <result column="month" property="month" jdbcType="VARCHAR" />
    <result column="total_num" property="totalNum" jdbcType="DOUBLE" />
    <result column="conduct_num" property="conductNum" jdbcType="DOUBLE" />
    <result column="handling_case_num" property="handlingCaseNum" jdbcType="DOUBLE" />
    <result column="duty_num" property="dutyNum" jdbcType="DOUBLE" />
    <result column="train_num" property="trainNum" jdbcType="DOUBLE" />
    <result column="social_contact_num" property="socialContactNum" jdbcType="DOUBLE" />
    <result column="amily_evaluation_num" property="amilyEvaluationNum" jdbcType="DOUBLE" />
    <result column="health_num" property="healthNum" jdbcType="DOUBLE" />
    <result column="drink_num" property="drinkNum" jdbcType="DOUBLE" />
    <result column="study_num" property="studyNum" jdbcType="DOUBLE" />
    <result column="work_num" property="workNum" jdbcType="DOUBLE" />
    <result column="creation_date" property="creationDate" jdbcType="TIMESTAMP" />
    <result column="update_date" property="updateDate" jdbcType="TIMESTAMP" />
    <result column="age" property="age"  />
  </resultMap>
  <sql id="Base_Column_List">
    id, num, creation_date
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from risk_trends
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from risk_trends
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.bayee.political.domain.RiskTrends">
    insert into risk_trends (id, num, creation_date
      )
    values (#{id,jdbcType=INTEGER}, #{num,jdbcType=INTEGER}, #{creationDate,jdbcType=DATE}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.bayee.political.domain.RiskTrends">
    insert into risk_trends
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="num != null">
        num,
      </if>
      <if test="creationDate != null">
        creation_date,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="num != null">
        #{num,jdbcType=INTEGER},
      </if>
      <if test="creationDate != null">
        #{creationDate,jdbcType=DATE},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.bayee.political.domain.RiskTrends">
    update risk_trends
    <set>
      <if test="num != null">
        num = #{num,jdbcType=INTEGER},
      </if>
      <if test="creationDate != null">
        creation_date = #{creationDate,jdbcType=DATE},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.bayee.political.domain.RiskTrends">
    update risk_trends
    set num = #{num,jdbcType=INTEGER},
      creation_date = #{creationDate,jdbcType=DATE}
    where id = #{id,jdbcType=INTEGER}
  </update>
  
  <select id="selectRiskTotal" resultType="Integer">
	  SELECT
			COUNT(1)
	  FROM (SELECT police_id, COUNT(1) FROM risk_report_record
	  		WHERE total_num > 5
	  		  and DATE_FORMAT(creation_date, '%Y-%m')&gt;=#{startTime}
	  		  AND DATE_FORMAT(creation_date, '%Y-%m')&lt;=#{endTime}
	  	GROUP BY police_id) a
  </select>
  
  <select id="selectRiskTrends" resultType="HashMap">
  	SELECT * FROM (SELECT v.month,IFNULL(b.total,0) value FROM (
		    SELECT DATE_FORMAT(CURDATE(), '%Y-%m') AS `month` 
		    UNION SELECT DATE_FORMAT((CURDATE() - INTERVAL 1 MONTH), '%Y-%m') AS `month` 
		    UNION SELECT DATE_FORMAT((CURDATE() - INTERVAL 2 MONTH), '%Y-%m') AS `month` 
		    UNION SELECT DATE_FORMAT((CURDATE() - INTERVAL 3 MONTH), '%Y-%m') AS `month` 
		    UNION SELECT DATE_FORMAT((CURDATE() - INTERVAL 4 MONTH), '%Y-%m') AS `month` 
		    UNION SELECT DATE_FORMAT((CURDATE() - INTERVAL 5 MONTH), '%Y-%m') AS `month`
			) v LEFT JOIN
			(SELECT a.pdate AS paTime, COUNT(1) AS total FROM (SELECT DATE_FORMAT(creation_date, '%Y-%m') AS pdate
			FROM risk_alarm GROUP BY DATE_FORMAT(creation_date, '%Y-%m'), police_id) a GROUP BY a.pdate) b
			ON b.paTime=v.month) a  ORDER BY a.month ASC;
  </select>
  
  
  <select id="selectDeptTopFive" resultType="HashMap">
      SELECT
          result.name, result.id, a.num as value, ROUND((a.num / b.num) * 100, 2) AS ratio
      FROM (SELECT
            a.department_id, COUNT(1) AS num
            FROM (SELECT
                    r.police_id, u.department_id
                FROM risk_report_record r
                    LEFT JOIN `user` u ON  r.police_id = u.police_id
                WHERE r.total_num > 5
                  and DATE_FORMAT(r.creation_date, '%Y-%m')&gt;=#{startTime}
                  AND DATE_FORMAT(r.creation_date, '%Y-%m')&lt;=#{endTime}
                GROUP BY r.police_id) a GROUP BY a.department_id ORDER BY num DESC LIMIT 5) a
       LEFT JOIN ( SELECT department_id, COUNT(1) AS num FROM `user` GROUP BY department_id) b ON a.department_id = b.department_id
       LEFT JOIN department result ON a.department_id = result.id
      ORDER BY ratio DESC
</select>
  
  <!-- top10 -->
  <select id="selectPoliceRiskTopTen" resultMap="BaseResultMapTwo">
  	select a.*,b.name,b.head_image as headImage,TIMESTAMPDIFF(YEAR,b.birthday,CURDATE()) AS age,
c.name as departmentName,d.position_name as positionName
from (select police_id,
sum(total_num) as total_num,
sum(conduct_num) as conduct_num,
round(sum(handling_case_num),2) as handling_case_num,
 sum(duty_num) as duty_num,
sum(train_num) as train_num,
sum(social_contact_num) as social_contact_num,
sum(amily_evaluation_num) as amily_evaluation_num,
sum(drink_num) as drink_num,
sum(study_num) as study_num,
sum(health_num) as health_num,
sum(work_num) as work_num
from risk_report_record where DATE_FORMAT(creation_date, '%Y-%m')&gt;=#{lastMonthTime}
and DATE_FORMAT(creation_date, '%Y-%m')&lt;=#{dateTime}
GROUP BY police_id order by ${orderName} desc limit 10) a
left join user b on b.police_id=a.police_id
left join department c on c.id=b.department_id
left join police_position d on d.id=b.position_id WHERE b.`name` IS NOT NULL
order by ${sortName} desc limit 10
  </select>
  
  
  <select id="selectPolice" resultType="HashMap">
  		select u.police_id AS policeId, u.head_image AS headImage,
  		u.`name`,d.`name` AS departmentName,p.position_name AS positionName,u.`name` AS value
  		 from `user` u,department d,police_position p WHERE 
  		 u.department_id=d.id AND u.position_id=p.id
  		 <if test="content !=null  and 	content !=''">
  		 	AND (u.police_id LIKE CONCAT('%',#{content},'%')	OR  u.`name` LIKE CONCAT('%',#{content},'%'));
  		 </if>
  </select>
  
  
  
  
  <!-- 综合指数风险 -->
<select id="comprehensiveIndex" parameterType="com.bayee.political.domain.RiskIndexMonitorChild" resultType="Integer">
SELECT count(1) FROM (SELECT (case when sum(r.conduct_num) &gt; 15 then 15 else sum(r.conduct_num) end+
        case when sum(r.handling_case_num) &gt; 20 then 20 else sum(r.handling_case_num) end+
        case when sum(r.duty_num) &gt; 25 then 25 else sum(r.duty_num) end+
        case when sum(r.train_num) &gt; 10 then 10 else sum(r.train_num) end+
        case when sum(r.drink_num) &gt; 15 then 15 else sum(r.drink_num) end+
        case when sum(r.study_num) &gt; 5 then 5 else sum(r.study_num) end+
        case when sum(r.amily_evaluation_num) &gt; 5 then 5 else sum(r.amily_evaluation_num) end+
        case when sum(r.work_num) &gt; 5 then 5 else sum(r.work_num) end+r.health_num) AS total_num FROM risk_report_record r
        WHERE
	r.creation_date&gt;=#{lastMonthTime} AND
 	r.creation_date&lt;=#{dateTime} GROUP BY r.police_id ORDER BY  total_num DESC) a WHERE a.total_num&gt;30
</select>
<!-- 行为规范风险 -->
<select id="drinkIndex" parameterType="com.bayee.political.domain.RiskIndexMonitorChild" resultType="Integer">
SELECT count(1) FROM (SELECT * FROM risk_alarm r WHERE r.alarm_type=11002
 AND DATE_FORMAT(r.creation_date, '%Y-%m')&lt;=#{dateTime}
 AND DATE_FORMAT(r.creation_date, '%Y-%m')&gt;=#{lastMonthTime} GROUP BY r.police_id) a
</select>
<!-- 执法办案风险 -->
<select id="conductIndex" parameterType="com.bayee.political.domain.RiskIndexMonitorChild" resultType="Integer">
SELECT count(1) FROM (SELECT * FROM risk_alarm r WHERE r.alarm_type=11003
 AND DATE_FORMAT(r.creation_date, '%Y-%m')&lt;=#{dateTime}
 AND DATE_FORMAT(r.creation_date, '%Y-%m')&gt;=#{lastMonthTime} GROUP BY r.police_id) a
</select>
<!-- 接警执勤风险  -->
<select id="caseIndex" parameterType="com.bayee.political.domain.RiskIndexMonitorChild" resultType="Integer">
SELECT count(1) FROM (SELECT * FROM risk_alarm r WHERE r.alarm_type=11004
 AND DATE_FORMAT(r.creation_date, '%Y-%m')&lt;=#{dateTime}
 AND DATE_FORMAT(r.creation_date, '%Y-%m')&gt;=#{lastMonthTime} GROUP BY r.police_id) a
</select>
<!-- 警务技能风险 -->
<select id="dutyIndex" parameterType="com.bayee.political.domain.RiskIndexMonitorChild" resultType="Integer">
SELECT count(1) FROM (SELECT * FROM risk_alarm r WHERE r.alarm_type=11005
 AND DATE_FORMAT(r.creation_date, '%Y-%m')&lt;=#{dateTime}
 AND DATE_FORMAT(r.creation_date, '%Y-%m')&gt;=#{lastMonthTime} GROUP BY r.police_id) a
</select>
<!-- 社交风险-->
<select id="trainIndex" parameterType="com.bayee.political.domain.RiskIndexMonitorChild" resultType="Integer">
SELECT count(1) FROM (SELECT * FROM risk_alarm r WHERE r.alarm_type=11006
 AND DATE_FORMAT(r.creation_date, '%Y-%m')&lt;=#{dateTime}
 AND DATE_FORMAT(r.creation_date, '%Y-%m')&gt;=#{lastMonthTime} GROUP BY r.police_id) a
</select>
<!-- 家属评价风险 -->
<select id="studyIndex" parameterType="com.bayee.political.domain.RiskIndexMonitorChild" resultType="Integer">
SELECT count(1) FROM (SELECT * FROM risk_alarm r WHERE r.alarm_type=11007
 AND DATE_FORMAT(r.creation_date, '%Y-%m')&lt;=#{dateTime}
 AND DATE_FORMAT(r.creation_date, '%Y-%m')&gt;=#{lastMonthTime} GROUP BY r.police_id) a
</select>
<!-- 健康  -->
<select id="healthIndex" parameterType="com.bayee.political.domain.RiskIndexMonitorChild" resultType="Integer">
SELECT count(1) FROM (SELECT * FROM risk_alarm r WHERE r.alarm_type=11008
 AND DATE_FORMAT(r.creation_date, '%Y-%m')&lt;=#{dateTime}
 AND DATE_FORMAT(r.creation_date, '%Y-%m')&gt;=#{lastMonthTime} GROUP BY r.police_id) a
</select>

<!-- 各项风险指标平均数 -->
<select id="avgNum" resultType="HashMap">
		SELECT v.month,IFNULL(b.value,0) value FROM (
		    SELECT DATE_FORMAT(CURDATE(), '%Y-%m') AS `month` 
		    UNION SELECT DATE_FORMAT((CURDATE() - INTERVAL 1 MONTH), '%Y-%m') AS `month` 
		    UNION SELECT DATE_FORMAT((CURDATE() - INTERVAL 2 MONTH), '%Y-%m') AS `month` 
		    UNION SELECT DATE_FORMAT((CURDATE() - INTERVAL 3 MONTH), '%Y-%m') AS `month` 
		    UNION SELECT DATE_FORMAT((CURDATE() - INTERVAL 4 MONTH), '%Y-%m') AS `month` 
		    UNION SELECT DATE_FORMAT((CURDATE() - INTERVAL 5 MONTH), '%Y-%m') AS `month` 
			) v LEFT JOIN
(SELECT AVG(${sortName}) value,DATE_FORMAT(a.creation_date,'%Y-%m') paTime FROM (SELECT * FROM risk_report_record a WHERE ${sortName}!=0
GROUP BY DATE_FORMAT(a.creation_date,'%Y-%m') ORDER BY DATE_FORMAT(a.creation_date,'%Y-%m') DESC) a
		GROUP BY DATE_FORMAT(a.creation_date,'%Y-%m') ORDER BY paTime DESC) b ON v.`month`=b.paTime ORDER BY v.month ASC
</select>


<select id="riskPersonnelTrend"  resultType="HashMap">
	SELECT * FROM (SELECT v.month,IFNULL(b.total,0) value FROM (
		    SELECT DATE_FORMAT(CURDATE(), '%Y-%m') AS `month` 
		    UNION SELECT DATE_FORMAT((CURDATE() - INTERVAL 1 MONTH), '%Y-%m') AS `month` 
		    UNION SELECT DATE_FORMAT((CURDATE() - INTERVAL 2 MONTH), '%Y-%m') AS `month` 
		    UNION SELECT DATE_FORMAT((CURDATE() - INTERVAL 3 MONTH), '%Y-%m') AS `month` 
		    UNION SELECT DATE_FORMAT((CURDATE() - INTERVAL 4 MONTH), '%Y-%m') AS `month` 
		    UNION SELECT DATE_FORMAT((CURDATE() - INTERVAL 5 MONTH), '%Y-%m') AS `month` 
			) v LEFT JOIN
(SELECT count(1) total,a.paTime FROM (SELECT count(1),police_id,DATE_FORMAT(r.creation_date,'%Y-%m') paTime FROM risk_alarm r
 WHERE r.alarm_type=#{alamType} GROUP BY police_id) a GROUP BY a.paTime) b ON b.paTime=v.month) a  ORDER BY a.month ASC
</select>

<!-- 本月新增预警人数 -->

<select id="theMonthAlamTotal" resultType="HashMap">
	SELECT *,(a.toMonth-b.upMonth)/b.upMonth AS tongbi
 FROM (SELECT count(1) AS toMonth FROM (SELECT count(1) AS value,r.police_id FROM risk_alarm r WHERE DATE_FORMAT(r.creation_date,'%Y-%m')=DATE_FORMAT(CURDATE(), '%Y-%m')
 GROUP BY r.police_id) a) a,
 
 
(SELECT count(1) upMonth FROM (SELECT count(1) AS value,r.police_id FROM risk_alarm r WHERE
 DATE_FORMAT(r.creation_date,'%Y-%m')=DATE_FORMAT((CURDATE() - INTERVAL 1 MONTH), '%Y-%m')
 GROUP BY r.police_id) a) b
</select>

    <select id="getRiskAlarmType" resultType="com.bayee.political.pojo.dto.RiskAlarmTypeDO">
        select
            rat.id as typeId, rat.alarm_name as typeName, ifnull(ra.count, 0) as typeCount
        from risk_alarm_type rat
                 left join (select count(police_id) as count, alarm_type from risk_alarm r
                            where DATE_FORMAT(r.creation_date,'%Y-%m')=DATE_FORMAT(CURDATE(), '%Y-%m') group by alarm_type) ra
                           on ra.alarm_type = rat.id
        order by rat.id
    </select>

	<select id="selectIndexRiskTotal" resultType="Integer">
			SELECT count(1) FROM ( SELECT * FROM risk_alarm a GROUP BY a.police_id) a
	</select>
	
	<select id="selectTheMonthRiskTotal" resultType="Integer">
			SELECT count(1) FROM ( SELECT * FROM risk_alarm a where	DATE_FORMAT(a.creation_date, '%Y-%m')=#{month} GROUP BY a.police_id) a
	</select>
	
	<!--<select id="caseLawTrends" resultType="HashMap">
		SELECT * FROM (
			SELECT v.click_date AS name,IFNULL(b.total,0) value FROM (
			SELECT curdate() as click_date
    union all
    SELECT date_sub(curdate(), interval 1 day) as click_date
    union all
    SELECT date_sub(curdate(), interval 2 day) as click_date
    union all
    SELECT date_sub(curdate(), interval 3 day) as click_date
    union all
    SELECT date_sub(curdate(), interval 4 day) as click_date
    union all
    SELECT date_sub(curdate(), interval 5 day) as click_date
    union all
    SELECT date_sub(curdate(), interval 6 day) as click_date) v
		 LEFT JOIN (SELECT DATE_FORMAT(a.creation_date,'%Y-%m-%d') AS paTime,count(1) AS total FROM risk_case_law_enforcement_record a GROUP BY paTime) b
		 ON b.paTime=v.click_date) a ORDER BY a.name ASC
	</select>-->

    <select id="caseLawTrends" resultType="HashMap">
        SELECT * FROM (
                          SELECT v.`month` AS name,IFNULL(b.total,0) value FROM (
                              SELECT DATE_FORMAT(CURDATE(), '%Y-%m') AS `month`
                              UNION SELECT DATE_FORMAT((CURDATE() - INTERVAL 1 MONTH), '%Y-%m') AS `month`
                              UNION SELECT DATE_FORMAT((CURDATE() - INTERVAL 2 MONTH), '%Y-%m') AS `month`
                              UNION SELECT DATE_FORMAT((CURDATE() - INTERVAL 3 MONTH), '%Y-%m') AS `month`
                              UNION SELECT DATE_FORMAT((CURDATE() - INTERVAL 4 MONTH), '%Y-%m') AS `month`
                              UNION SELECT DATE_FORMAT((CURDATE() - INTERVAL 5 MONTH), '%Y-%m') AS `month`) v
                              LEFT JOIN
                              <!--DATE_FORMAT(a.creation_date,'%Y-%m-%d')修改前-->
                              (SELECT DATE_FORMAT(a.creation_date,'%Y-%m') AS paTime,count(1) AS total FROM risk_case_law_enforcement_record a GROUP BY paTime) b
                          ON b.paTime=v.`month`) a ORDER BY a.name ASC
    </select>
	
	<select id="caseLawPepolNum" resultType="Integer">
		SELECT count(1) FROM (SELECT count(1) FROM risk_case_law_enforcement_record r GROUP BY r.police_id) a;
	</select>
	
	
	<select id="caseLawThisMonthNum" resultType="Integer">
		SELECT count(1) FROM risk_case_law_enforcement_record r WHERE DATE_FORMAT(CURDATE(), '%Y-%m')=DATE_FORMAT(r.creation_date, '%Y-%m')
	</select>
	
	<select id="caseLawRepeatNum"  resultType="Integer">
		SELECT count(1) FROM (SELECT count(1) total,r.police_id,r.type FROM risk_case_law_enforcement_record r GROUP BY r.police_id,r.type) a WHERE a.total>1
	</select>

<!--	<select id="dutyDealTrends" resultType="HashMap">
		SELECT * FROM (
			SELECT v.click_date AS name,IFNULL(b.total,0) value FROM (
                SELECT curdate() as click_date
                union all
                SELECT date_sub(curdate(), interval 1 day) as click_date
                union all
                SELECT date_sub(curdate(), interval 2 day) as click_date
                union all
                SELECT date_sub(curdate(), interval 3 day) as click_date
                union all
                SELECT date_sub(curdate(), interval 4 day) as click_date
                union all
                SELECT date_sub(curdate(), interval 5 day) as click_date
                union all
                SELECT date_sub(curdate(), interval 6 day) as click_date) v
		 LEFT JOIN (SELECT DATE_FORMAT(a.creation_date,'%Y-%m-%d') AS paTime,count(1) AS total FROM risk_duty_deal_police_record a GROUP BY paTime) b
		 ON b.paTime=v.click_date) a ORDER BY a.name ASC
	</select>-->

    <select id="dutyDealTrends" resultType="HashMap">
        SELECT * FROM (
                          SELECT v.`month` AS name,IFNULL(b.total,0) value FROM (
                              SELECT DATE_FORMAT(CURDATE(), '%Y-%m') AS `month`
                              UNION SELECT DATE_FORMAT((CURDATE() - INTERVAL 1 MONTH), '%Y-%m') AS `month`
                              UNION SELECT DATE_FORMAT((CURDATE() - INTERVAL 2 MONTH), '%Y-%m') AS `month`
                              UNION SELECT DATE_FORMAT((CURDATE() - INTERVAL 3 MONTH), '%Y-%m') AS `month`
                              UNION SELECT DATE_FORMAT((CURDATE() - INTERVAL 4 MONTH), '%Y-%m') AS `month`
                              UNION SELECT DATE_FORMAT((CURDATE() - INTERVAL 5 MONTH), '%Y-%m') AS `month`) v
                              <!--DATE_FORMAT(a.creation_date,'%Y-%m-%d'修改前的-->
                              LEFT JOIN (SELECT DATE_FORMAT(a.creation_date,'%Y-%m') AS paTime,count(1) AS total FROM risk_duty_deal_police_record a GROUP BY paTime) b
                          ON b.paTime=v.`month`) a ORDER BY a.name ASC
    </select>
	
	<select id="dutyDealPepolNum" resultType="Integer">
		SELECT count(1) FROM (SELECT count(1) FROM risk_duty_deal_police_record r GROUP BY r.police_id) a;
	</select>
	
	
	<select id="dutyDealThisMonthNum" resultType="Integer">
		SELECT count(1) FROM risk_duty_deal_police_record r WHERE DATE_FORMAT(CURDATE(), '%Y-%m')=DATE_FORMAT(r.creation_date, '%Y-%m')
	</select>
	
	<select id="dutyDealRepeatNum"  resultType="Integer">
		SELECT count(1) FROM (SELECT count(1) total,r.police_id,r.type FROM risk_duty_deal_police_record r GROUP BY r.police_id,r.type) a WHERE a.total>1
	</select>
	
	<select id="ishealth" resultType="HashMap">
			SELECT * FROM (SELECT count(1) AS noOverweight FROM risk_health_record r WHERE r.is_overweight!=1) a,
		 (SELECT count(1) AS noHyperlipidemia FROM risk_health_record r WHERE r.is_hyperlipidemia!=1) b,
		 (SELECT count(1) AS noHypertension FROM risk_health_record r WHERE r.is_hypertension!=1) c,
		 (SELECT count(1) AS noHyperglycemia FROM risk_health_record r WHERE r.is_hyperglycemia!=1) d,
		 (SELECT count(1) AS noHyperuricemia FROM risk_health_record r WHERE r.is_hyperuricemia!=1) e,
		 (SELECT count(1) AS noProstate FROM risk_health_record r WHERE r.is_prostate!=1) f,
		 (SELECT count(1) AS noMajorDiseases FROM risk_health_record r WHERE r.is_major_diseases!=1) g,
		 (SELECT count(1) AS onHeart FROM risk_health_record r WHERE r.is_heart!=1) h,
		 (SELECT count(1) AS onTumorAntigen FROM risk_health_record r WHERE r.is_tumor_antigen!=1) i,
		 (SELECT count(1) AS onOrthopaedics FROM risk_health_record r WHERE r.is_orthopaedics!=1) j;
	</select>
	
	<select id="nohealth" resultType="HashMap">
		SELECT * FROM (SELECT count(1) AS isOverweight FROM risk_health_record r WHERE r.is_overweight=1) a,
		 (SELECT count(1) AS isHyperlipidemia FROM risk_health_record r WHERE r.is_hyperlipidemia=1) b,
		 (SELECT count(1) AS isHypertension FROM risk_health_record r WHERE r.is_hypertension=1) c,
		 (SELECT count(1) AS isHyperglycemia FROM risk_health_record r WHERE r.is_hyperglycemia=1) d,
		 (SELECT count(1) AS isHyperuricemia FROM risk_health_record r WHERE r.is_hyperuricemia=1) e,
		 <!-- (SELECT count(1) AS isProstate FROM risk_health_record r WHERE r.is_prostate!=1) f,-->
		 (SELECT count(1) AS isProstate FROM risk_health_record r WHERE r.is_prostate=1) f,
		 (SELECT count(1) AS isMajorDiseases FROM risk_health_record r WHERE r.is_major_diseases=1) g,
		 (SELECT count(1) AS isHeart FROM risk_health_record r WHERE r.is_heart=1) h,
		 (SELECT count(1) AS isTumorAntigen FROM risk_health_record r WHERE r.is_tumor_antigen=1) i,
		 (SELECT count(1) AS isOrthopaedics FROM risk_health_record r WHERE r.is_orthopaedics=1) j;
	</select>
	<!--改前的-->
<!--	<select id="inspectNum" resultType="Integer">-->
<!--		SELECT count(1) FROM (SELECT r.`year` FROM risk_health_record r ORDER BY r.creation_date LIMIT 1) a ,risk_health_record r WHERE a.`year`=r.`year`-->
<!--	</select>-->
    <select id="inspectNum" resultType="Integer">
        SELECT count(1) FROM (SELECT r.`year` FROM risk_health_record r GROUP BY r.`year`) a ,risk_health_record r WHERE a.`year`=r.`year`
    </select>
    <!--改前的-->
<!--	<select id="healthNum" resultType="Integer">-->
<!--		SELECT count(1) FROM (SELECT r.`year` FROM risk_health_record r ORDER BY r.creation_date LIMIT 1) a ,risk_health_record r WHERE a.`year`=r.`year`-->
<!--		 AND r.bmi!=2 AND r.is_overweight!=1 AND r.is_hyperlipidemia!=1 AND r.is_hypertension!=1 AND r.is_hyperglycemia!=1 AND r.is_hyperuricemia!=1 AND r.is_prostate!=1-->
<!--		 AND r.is_major_diseases!=1 AND r.is_heart!=1 AND r.is_tumor_antigen!=1 AND r.is_orthopaedics!=1-->
<!--	</select>-->

    <select id="healthNum" resultType="Integer">
        SELECT count(1) FROM (SELECT r.`year` FROM risk_health_record r GROUP BY r.`year`) a ,risk_health_record r WHERE a.`year`=r.`year`
		 AND r.bmi!=2 AND r.is_overweight!=1 AND r.is_hyperlipidemia!=1 AND r.is_hypertension!=1 AND r.is_hyperglycemia!=1 AND r.is_hyperuricemia!=1 AND r.is_prostate!=1
		 AND r.is_major_diseases!=1 AND r.is_heart!=1 AND r.is_tumor_antigen!=1 AND r.is_orthopaedics!=1
    </select>

	<!--改i前的-->
<!--	<select id="healthRiskNum" resultType="Integer">-->
<!--		SELECT count(1) FROM (SELECT r.`year` FROM risk_health r ORDER BY r.creation_date desc LIMIT 1) a ,risk_health r WHERE a.`year`=r.`year` AND r.index_num>=3;-->
<!--	</select>-->
    <select id="healthRiskNum" resultType="Integer">
        elect * from risk_health;
    </select>
	<!-- 总合格数 -->
	<select id="qualifiedNum" resultType="Integer">
		SELECT a.count+b.count FROM (select count(distinct(a.police_id)) as count from train_firearm_achievement a ,train_firearm t
		where a.train_firearm_id =t.id
		and a.is_sign = 2
		and a.achievement_grade = 2) a,(select count(distinct(police_id)) as count from train_physical_achievement a,train_physical t
		where a.train_physical_id = t.id
		and a.is_sign = 2
		and a.achievement_grade = 2) b;
	</select>
	
	<!-- 合格率 -->
	<select id="qualifiedRate" resultType="Double">
        select truncate (
       (
           ((select COUNT(distinct(police_id)) from train_physical_achievement where achievement_grade = 2)
                + (select COUNT(distinct(police_id)) from train_firearm_achievement where achievement_grade = 2))
           /
           ((select COUNT(distinct(police_id)) from train_physical_achievement where is_test_free = 2)
                + (select COUNT(distinct(police_id)) from train_firearm_achievement))
       )* 100, 2) as rate
	</select>
	
	
	<!-- 柱状图 -->
	<select id="qualifiedRateEcharts" resultType="HashMap">
        select
            ifnull(TRUNCATE(((select COUNT(distinct(police_id)) from train_physical_achievement where achievement_grade = 2 and train_physical_id = a.id) /
                             (select COUNT(distinct(police_id)) from train_physical_achievement where is_test_free = 2 and train_physical_id = a.id) * 100), 2), 0) as rate,
            a.name, 1 as type, a.id
        from train_physical a
        union all
        select
            TRUNCATE(((select COUNT(distinct(police_id)) from train_firearm_achievement where achievement_grade = 2 and train_firearm_id = a.id) /
                      (select COUNT(distinct(police_id)) from train_firearm_achievement where train_firearm_id = a.id) * 100), 2) as rate,
            a.name, 2 as type, a.id
        from train_firearm a
	</select>

    <select id="riskDeptAlarmChart" resultType="com.bayee.political.json.ChartResult">
        select d.name as name, IFNULL(ra.count, 0) as value
        from department d
            left join (
            select
                   u.department_id, COUNT(u.police_id) as `count`
            from (select police_id from risk_alarm where DATE_FORMAT(creation_date, '%Y-%m') = #{date} group by police_id) ra, user u
            where ra.police_id = u.police_id
            group by u.department_id) ra on d.id = ra.department_id
        order by ra.count desc, d.id desc
        limit 5
    </select>

    <select id="caseDeptChart" resultType="com.bayee.political.json.ChartResult">
        select d.name as name, IFNULL(ra.count, 0) as value
        from department d
            left join (
            select
                u.department_id,COUNT(er.police_id) as `count`
            from risk_case_law_enforcement_record er, user u
            <!--修改前的sql DATE_FORMAT(er.creation_date,'%Y-%m-%d')-->
            where er.police_id = u.police_id and DATE_FORMAT(er.creation_date,'%Y-%m') = #{date}
            group by u.department_id) ra on d.id = ra.department_id
        order by ra.count desc, d.id desc
        limit 5
    </select>

    <select id="dutyDeptChart" resultType="com.bayee.political.json.ChartResult">
        select d.name as name, IFNULL(ra.count, 0) as value
        from department d
            left join (
            select
            u.department_id,COUNT(er.police_id) as `count`
            from risk_duty_deal_police_record er, user u
            <!--DATE_FORMAT(er.creation_date,'%Y-%m-%d') -->
            where er.police_id = u.police_id and DATE_FORMAT(er.creation_date,'%Y-%m') = #{date}
            group by u.department_id) ra on d.id = ra.department_id
        order by ra.count desc, d.id desc
        limit 5
    </select>

    <select id="physicalTrainDeptChart" resultType="com.bayee.political.json.ChartResult">
        select d.name as name, IFNULL(ra.count, 0) as value
        from department d
            left join (
            select u.department_id, COUNT(u.police_id) as `count` from train_physical_achievement fa, user u
            where fa.police_id = u.police_id and achievement_grade = 1 and train_physical_id = #{id}
            group by u.department_id) ra on d.id = ra.department_id
        order by ra.count desc, d.id desc
        limit 5
    </select>

    <select id="firearmTrainDeptChart" resultType="com.bayee.political.json.ChartResult">
        select d.name as name, IFNULL(ra.count, 0) as value
        from department d
            left join (
            select u.department_id, COUNT(u.police_id) as `count` from train_firearm_achievement fa, user u
            where fa.police_id = u.police_id and achievement_grade = 1 and  train_firearm_id = #{id}
            group by u.department_id) ra on d.id = ra.department_id
        order by ra.count desc, d.id desc
            limit 5
    </select>

    <select id="healthAlarmDeptChart" resultType="com.bayee.political.json.ChartResult">
        select d.name as name, IFNULL(ra.count, 0) as value
        from department d
            left join (
            select u.department_id, COUNT(r.police_id) as `count` from risk_health_record r, user u
            where r.police_id = u.police_id and ${key} = 1
            group by u.department_id) ra on d.id = ra.department_id
        order by ra.count desc, d.id desc
            limit 5
    </select>

</mapper>