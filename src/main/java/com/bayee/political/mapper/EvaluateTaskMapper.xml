<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bayee.political.mapper.EvaluateTaskMapper">
  <resultMap id="BaseResultMap" type="com.bayee.political.domain.EvaluateTask">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="police_id" jdbcType="VARCHAR" property="policeId" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="type" jdbcType="INTEGER" property="type" />
    <result column="start_time" jdbcType="TIMESTAMP" property="startTime" />
    <result column="end_time" jdbcType="TIMESTAMP" property="endTime" />
    <result column="over_time" jdbcType="TIMESTAMP" property="overTime" />
    <result column="template_id" jdbcType="INTEGER" property="templateId" />
    <result column="is_template" jdbcType="INTEGER" property="isTemplate" />
    <result column="process" jdbcType="INTEGER" property="process" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="operation" jdbcType="INTEGER" property="operation" />
    <result column="creation_date" jdbcType="TIMESTAMP" property="creationDate" />
    <result column="update_date" jdbcType="TIMESTAMP" property="updateDate" />
  </resultMap>
  <resultMap id="evaluateCharts" type="com.bayee.political.domain.CalculationChart" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="num" property="num" jdbcType="INTEGER" />
  </resultMap>
   <resultMap id="EvaluationStatisticsMap" type="com.bayee.political.domain.ScreenEvaluationStatistics" >
    <result column="evaluateTaskNum" property="evaluateTaskNum" />
    <result column="evaluatePersonNum" property="evaluatePersonNum" />
  </resultMap>
  <sql id="Base_Column_List">
    id, name, type, start_time, end_time,over_time, template_id, is_template, process, status, 
    operation, creation_date, update_date
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from evaluate_task
    where id = #{id,jdbcType=INTEGER}
  </select>
  <!-- 评价任务删除 -->
  <delete id="evaluationTaskDelete" parameterType="java.lang.Integer">
    delete from evaluate_task
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <!-- 评价任务新增（后台） -->
  <insert id="evaluateTaskCreat" keyColumn="id" keyProperty="id" parameterType="com.bayee.political.domain.EvaluateTask" useGeneratedKeys="true">
    insert into evaluate_task (name, type, 
      start_time, end_time,over_time, template_id, 
      is_template, process, status, 
      operation, creation_date, update_date
      )
    values (#{name,jdbcType=VARCHAR}, #{type,jdbcType=INTEGER}, 
      #{startTime,jdbcType=TIMESTAMP}, #{endTime,jdbcType=TIMESTAMP}, #{overTime,jdbcType=TIMESTAMP},
      #{templateId,jdbcType=INTEGER}, 
      #{isTemplate,jdbcType=INTEGER}, #{process,jdbcType=INTEGER}, #{status,jdbcType=INTEGER}, 
      #{operation,jdbcType=INTEGER}, #{creationDate,jdbcType=TIMESTAMP}, #{updateDate,jdbcType=TIMESTAMP}
      )
  </insert>
  <!-- 评价任务修改（后台） -->
  <update id="evaluateTaskUpdate" parameterType="com.bayee.political.domain.EvaluateTask">
    update evaluate_task
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="startTime != null">
        start_time = #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null">
        end_time = #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="overTime != null">
        over_time = #{overTime,jdbcType=TIMESTAMP},
      </if>
      <if test="templateId != null">
        template_id = #{templateId,jdbcType=INTEGER},
      </if>
      <if test="isTemplate != null">
        is_template = #{isTemplate,jdbcType=INTEGER},
      </if>
      <if test="process != null">
        process = #{process,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="operation != null">
        operation = #{operation,jdbcType=INTEGER},
      </if>
      <if test="creationDate != null">
        creation_date = #{creationDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateDate != null">
        update_date = #{updateDate,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.bayee.political.domain.EvaluateTask">
    update evaluate_task
    set name = #{name,jdbcType=VARCHAR},
      type = #{type,jdbcType=INTEGER},
      start_time = #{startTime,jdbcType=TIMESTAMP},
      end_time = #{endTime,jdbcType=TIMESTAMP},
      template_id = #{templateId,jdbcType=INTEGER},
      is_template = #{isTemplate,jdbcType=INTEGER},
      process = #{process,jdbcType=INTEGER},
      status = #{status,jdbcType=INTEGER},
      operation = #{operation,jdbcType=INTEGER},
      creation_date = #{creationDate,jdbcType=TIMESTAMP},
      update_date = #{updateDate,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <!-- 评价列表查询(api) -->
  <select id="evaluationList" parameterType="com.bayee.political.domain.EvaluateTask" resultMap="BaseResultMap">
<!-- select a.police_id,a.status,b.id,b.name,b.type,b.start_time,b.end_time,TIMESTAMPDIFF(MINUTE, SYSDATE(), end_time) as timeChange,
b.template_id,b.is_template,b.process,b.operation,b.creation_date,b.update_date
from(select distinct task_id,police_id, status from 
evaluate_task_participant where police_id = #{policeId}) a
left join evaluate_task b on b.id=a.task_id 
where 1=1 
      <if test="waitStatus != null and waitStatus !=''">
        and b.process=0 or (b.process=1 and a.status=0)
      </if>
      <if test="overStatus != null and overStatus !=''">
        and b.process=2 or a.status=1
      </if>
order by b.id desc limit #{pageSize},10 -->
select a.police_id,a.status,b.id,b.name,b.type,b.start_time,b.end_time,TIMESTAMPDIFF(MINUTE, SYSDATE(), end_time) as timeChange,
b.template_id,b.is_template,b.process,b.operation,b.creation_date,b.update_date,c.rank_id as rankId
from(select distinct task_id,police_id, status from 
evaluate_task_participant where police_id = #{policeId}) a
left join evaluate_task b on b.id=a.task_id 
left join evaluate_template c on c.id=b.template_id
where 1=1 and b.process!=0
       <if test="waitStatus != null and waitStatus !=''">
        and a.status=0
      </if>
      <if test="overStatus != null and overStatus !=''">
        and a.status=1
      </if>
order by b.id desc
</select>
<!--评价列表数量统计(api) -->
  <select id="evaluationListCount" parameterType="com.bayee.political.domain.EvaluateTask" resultType="java.lang.Integer">
select count(*) from (
select a.police_id,a.status,b.id,b.name,b.type,b.start_time,b.end_time,TIMESTAMPDIFF(MINUTE, SYSDATE(), end_time) as timeChange,
b.template_id,b.is_template,b.process,b.operation,b.creation_date,b.update_date,c.rank_id as rankId
from(select distinct task_id,police_id, status from 
evaluate_task_participant where police_id = #{policeId}) a
left join evaluate_task b on b.id=a.task_id 
left join evaluate_template c on c.id=b.template_id
where 1=1 and b.process!=0
      <if test="waitStatus != null and waitStatus !=''">
        and a.status=0
      </if>
      <if test="overStatus != null and overStatus !=''">
        and a.status=1
      </if>) as t
</select>

  <!-- 评价列表查询(后台) -->
  <select id="evaluateTaskList" parameterType="com.bayee.political.domain.EvaluateTask" resultMap="BaseResultMap">
select id, name, type, start_time, end_time,TIMESTAMPDIFF(MINUTE, SYSDATE(), end_time) as timeChange,
template_id, is_template, process, status, operation, creation_date, update_date from evaluate_task where 1=1
     <if test="type != null and type !=''">
        and type = #{type}
      </if>
      <if test="process != null and process !=''">
        and process = #{process}
      </if>
      <if test="process == 0">
        and process = 0
      </if>
       <if test="keywords != null and keywords !=''">
        and name like '%${keywords}%'
      </if>
      order by id desc
limit #{pageSize},10
</select>
<!--评价列表查询数量统计(后台) -->
  <select id="evaluateTaskListCount" parameterType="com.bayee.political.domain.EvaluateTask" resultType="java.lang.Integer">
select count(*) from evaluate_task where 1=1
    <if test="type != null and type !=''">
        and type = #{type}
      </if>
      <if test="process != null and process !=''">
        and process = #{process}
      </if>
       <if test="keywords != null and keywords !=''">
        and name like '%${keywords}%'
      </if>
</select>
<!-- 评价任务详情(后台) -->
  <select id="evaluateTaskItem" parameterType="com.bayee.political.domain.EvaluateTask" resultMap="BaseResultMap">
select id, name, type, start_time, end_time,TIMESTAMPDIFF(MINUTE, SYSDATE(), end_time) as timeChange,
template_id, is_template, process, status, operation, creation_date, update_date from evaluate_task 
where id = #{id}
</select>
 <!-- 定时评价列表查询(后台) -->
  <select id="evaluateTaskTimingList" parameterType="com.bayee.political.domain.EvaluateTask" resultMap="BaseResultMap">
select id, name, type, start_time, end_time,TIMESTAMPDIFF(MINUTE, SYSDATE(), end_time) as timeChange,
template_id, is_template, process, status, operation, creation_date, update_date from evaluate_task
where process!=2
</select>
 <!-- 评价任务Top5列表查询(后台) -->
  <select id="homeEvaluationList" parameterType="com.bayee.political.domain.EvaluateTask" resultMap="BaseResultMap">
select * from evaluate_task order by id desc limit 5
</select>
 <!-- 评价任务Top5列表查询(后台) -->
  <select id="homeEvaluationPieChart" parameterType="com.bayee.political.domain.CalculationChart" resultMap="evaluateCharts">
select count(*) as num, (case when type=1 then '个人'
when type=2 then '单位' when type=3 then '项目' end) as name from evaluate_task GROUP BY type
</select>
 <!-- 评价任务类型折线图-统计总数(后台) -->
  <select id="homeLineTotalChart" parameterType="com.bayee.political.domain.CalculationChart" resultMap="evaluateCharts">
select count(*) as num,name,name as id from
(select (case when CAST(date_format(creation_date,'%m') as SIGNED)&gt;=1 
and CAST(date_format(creation_date,'%m') as SIGNED)&lt;=3 then '1'
when CAST(date_format(creation_date,'%m') as SIGNED)&gt;=4
and CAST(date_format(creation_date,'%m') as SIGNED)&lt;=6 then '2'
when CAST(date_format(creation_date,'%m') as SIGNED)&gt;=7 
and CAST(date_format(creation_date,'%m') as SIGNED)&lt;=9 then '3'
when CAST(date_format(creation_date,'%m') as SIGNED)&gt;=10 
and CAST(date_format(creation_date,'%m') as SIGNED)&lt;=12 then '4' end) as name 
from evaluate_task 
where date_format(creation_date, '%Y')=YEAR(CURDATE())) as t GROUP BY name
order by name
</select>
 <!-- 评价任务类型折线图-类型数量(后台) -->
  <select id="homeLineChart" parameterType="com.bayee.political.domain.CalculationChart" resultMap="evaluateCharts">
select count(*) as num,name,name as id from
(select (case when CAST(date_format(creation_date,'%m') as SIGNED)&gt;=1 
and CAST(date_format(creation_date,'%m') as SIGNED)&lt;=3 then '1'
when CAST(date_format(creation_date,'%m') as SIGNED)&gt;=4
and CAST(date_format(creation_date,'%m') as SIGNED)&lt;=6 then '2'
when CAST(date_format(creation_date,'%m') as SIGNED)&gt;=7 
and CAST(date_format(creation_date,'%m') as SIGNED)&lt;=9 then '3'
when CAST(date_format(creation_date,'%m') as SIGNED)&gt;=10 
and CAST(date_format(creation_date,'%m') as SIGNED)&lt;=12 then '4' end) as name 
from evaluate_task 
where 1=1 and date_format(creation_date, '%Y')=YEAR(CURDATE())
     <if test="type != null and type !=''">
        and type = #{type}
      </if>) as t GROUP BY name
order by name
</select>
<!--判断当前模板是否被任务引用(后台) -->
  <select id="existTemplateList" parameterType="com.bayee.political.domain.EvaluateTask" resultMap="BaseResultMap">
select * from evaluate_task where template_id = #{templateId}
</select>

<!-- 评价类型占比
	 type 任务类型（1个人2单位3项目）
	 dateType 1月度2季度3年度 -->
<select id="typeRator" resultType="java.lang.Double">
<if test="dateType==1">
select IFNULL(TRUNCATE((select count(*) as count from evaluate_task where type = #{type} and MONTH(creation_date) = MONTH(now())) /
(select count(*) as count from evaluate_task where MONTH(creation_date) = MONTH(now())) * 100, 2), 0) as rator 
</if>
<if test="dateType==2">
select IFNULL(TRUNCATE((select count(*) as count from evaluate_task where type = #{type} and QUARTER(creation_date) = QUARTER(now())) /
(select count(*) as count from evaluate_task where QUARTER(creation_date) = QUARTER(now())) * 100, 2), 0) as rator 
</if>
<if test="dateType==3">
select IFNULL(TRUNCATE((select count(*) as count from evaluate_task where type = #{type} and YEAR(creation_date) = YEAR(now())) /
(select count(*) as count from evaluate_task where YEAR(creation_date) = YEAR(now())) * 100, 2), 0) as rator 
</if>
</select>

<!-- 最新5条评价任务 -->
<select id="newTaskTopFive" resultMap="BaseResultMap">
select * from evaluate_task order by start_time desc limit 0,5
</select>
 <!-- 评价任务类型统计 -->
  <select id="screenEvaluationTypeList" parameterType="com.bayee.political.domain.CalculationChart" resultMap="evaluateCharts">
select count(*) as num, (case when type=1 then '个人'
when type=2 then '单位' when type=3 then '项目' end) as name from evaluate_task GROUP BY type
</select>
 <!-- 评价任务数量、评价人次统计 -->
  <select id="screenEvaluationStatistics" parameterType="com.bayee.political.domain.ScreenEvaluationStatistics" resultMap="EvaluationStatisticsMap">
select IFNULL(a.anum,0) as evaluateTaskNum,IFNULL(b.bnum,0) as evaluatePersonNum from 
(select count(*) as anum from evaluate_task) a
join
(select count(*) as bnum from evaluate_task_participant) b
</select>
</mapper>