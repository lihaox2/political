<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.bayee.political.mapper.EvaluateRankDetailMapper" >
  <resultMap id="BaseResultMap" type="com.bayee.political.domain.EvaluateRankDetail" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="rank_id" property="rankId" jdbcType="INTEGER" />
    <result column="detail_name" property="detailName" jdbcType="VARCHAR" />
    <result column="detail_value" property="detailValue" jdbcType="DOUBLE" />
    <result column="is_max" property="isMax" jdbcType="INTEGER" />
    <result column="max_num" property="maxNum" jdbcType="INTEGER" />
    <result column="creation_date" property="creationDate" jdbcType="TIMESTAMP" />
    <result column="update_date" property="updateDate" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, rank_id, detail_name, detail_value, is_max, max_num, creation_date, update_date
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from evaluate_rank_detail
    where id = #{id,jdbcType=INTEGER}
  </select>
  <!-- 根据rankId删除等次详情规则(后台) -->
  <delete id="evaluateRankDetailTotalDelete" parameterType="java.lang.Integer" >
    delete from evaluate_rank_detail
    where rank_id = #{rankId,jdbcType=INTEGER}
  </delete>
  <!-- 新增等次详情规则（后台） -->
  <insert id="evaluateRankDetailCreat" keyColumn="id" keyProperty="id" parameterType="com.bayee.political.domain.EvaluateRankDetail" useGeneratedKeys="true">
    insert into evaluate_rank_detail (rank_id, detail_name, 
      detail_value, is_max, max_num, 
      creation_date, update_date)
    values (#{rankId,jdbcType=INTEGER}, #{detailName,jdbcType=VARCHAR}, 
      #{detailValue,jdbcType=DOUBLE}, #{isMax,jdbcType=INTEGER}, #{maxNum,jdbcType=INTEGER}, 
      #{creationDate,jdbcType=TIMESTAMP}, #{updateDate,jdbcType=TIMESTAMP})
  </insert>
  <!-- 评价等次详情列表修改(后台) -->
  <update id="evaluateRankDetailUpdate" parameterType="com.bayee.political.domain.EvaluateRankDetail" >
    update evaluate_rank_detail
    <set >
      <if test="rankId != null" >
        rank_id = #{rankId,jdbcType=INTEGER},
      </if>
      <if test="detailName != null" >
        detail_name = #{detailName,jdbcType=VARCHAR},
      </if>
      <if test="detailValue != null" >
        detail_value = #{detailValue,jdbcType=DOUBLE},
      </if>
      <if test="isMax != null" >
        is_max = #{isMax,jdbcType=INTEGER},
      </if>
      <if test="maxNum != null" >
        max_num = #{maxNum,jdbcType=INTEGER},
      </if>
      <if test="creationDate != null" >
        creation_date = #{creationDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateDate != null" >
        update_date = #{updateDate,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.bayee.political.domain.EvaluateRankDetail" >
    update evaluate_rank_detail
    set rank_id = #{rankId,jdbcType=INTEGER},
      detail_name = #{detailName,jdbcType=VARCHAR},
      detail_value = #{detailValue,jdbcType=DOUBLE},
      is_max = #{isMax,jdbcType=INTEGER},
      max_num = #{maxNum,jdbcType=INTEGER},
      creation_date = #{creationDate,jdbcType=TIMESTAMP},
      update_date = #{updateDate,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
   <!--查询等次详情规则(api) -->
  <select id="evaluateRankDetailApiList" parameterType="com.bayee.political.domain.EvaluateRankDetail" resultMap="BaseResultMap">
select * from evaluate_rank_detail where rank_id=#{rankId,jdbcType=INTEGER} order by id
</select>
<!--评价等次详情信息查询(后台) -->
  <select id="evaluateRankDetailList" parameterType="com.bayee.political.domain.EvaluateRankDetail" resultMap="BaseResultMap">
select * from evaluate_rank_detail where rank_id=#{rankId,jdbcType=INTEGER} order by id
</select>
<!--投票类型分类统计(api) -->
  <select id="voteDetailTypeList" parameterType="com.bayee.political.domain.EvaluateRankDetail" resultMap="BaseResultMap">
select a.rank_detail_id as id,a.num,b.detail_name,c.totalNum from(select count(*) num,rank_detail_id from 
evaluate_task_participant 
where police_id=#{policeId} and task_id=#{taskId} and status=1 GROUP BY rank_detail_id) a
left join evaluate_rank_detail b on b.id=a.rank_detail_id
join(select count(*) as totalNum from evaluate_task_participant 
where police_id=#{policeId} and task_id=#{taskId} and status=1) c
order by a.rank_detail_id
</select>
<!--规则详情查询(api) -->
  <select id="evaluateRankDetailItem" parameterType="com.bayee.political.domain.EvaluateRankDetail" resultMap="BaseResultMap">
select * from evaluate_rank_detail where id=#{id}
</select>
<!--根据rankId和规则名称查询(api) -->
  <select id="rankDetailItem" parameterType="com.bayee.political.domain.EvaluateRankDetail" resultMap="BaseResultMap">
select * from evaluate_rank_detail where rank_id = #{rankId} and detail_name = #{detailName}
</select>
</mapper>