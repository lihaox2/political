<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.bayee.political.mapper.RiskConductBureauRuleRecordMapper" >
  <resultMap id="BaseResultMap" type="com.bayee.political.domain.RiskConductBureauRuleRecord" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="police_id" property="policeId" jdbcType="VARCHAR" />
    <result column="type" property="type" jdbcType="INTEGER" />
    <result column="input_time" property="inputTime" jdbcType="TIMESTAMP" />
    <result column="content" property="content" jdbcType="VARCHAR" />
    <result column="deduction_score" property="deductionScore" jdbcType="DOUBLE" />
    <result column="scoring_level" property="scoringLevel" jdbcType="INTEGER" />
    <result column="scoring_dept" property="scoringDept" jdbcType="INTEGER" />
    <result column="measures" property="measures" jdbcType="VARCHAR" />
    <result column="remarks" property="remarks" jdbcType="VARCHAR" />
    <result column="img_arr" property="imgArr" jdbcType="VARCHAR" />
    <result column="is_effective" property="isEffective" jdbcType="INTEGER" />
    <result column="inspector_key" property="inspectorKey" jdbcType="VARCHAR" />
    <result column="data_origin_flag" property="dataOriginFlag" jdbcType="INTEGER" />
    <result column="creation_date" property="creationDate" jdbcType="TIMESTAMP" />
    <result column="update_date" property="updateDate" jdbcType="TIMESTAMP" />
    <result column="type_name" property="typeName" jdbcType="VARCHAR" />
    <result column="parentTypeId" property="parentTypeId" jdbcType="INTEGER" />
    <result column="rootName" property="rootName" jdbcType="VARCHAR" />
    <result column="appealState" property="appealState" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, police_id, type, input_time, content, deduction_score, scoring_level, scoring_dept, 
    measures, remarks, img_arr, is_effective, inspector_key, data_origin_flag, creation_date,
    update_date
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select r1.*, (select name from risk_conduct_bureau_rule_type t where t.id = r2.parent_id) as type_name,
           r2.parent_id as parentTypeId
    from risk_conduct_bureau_rule_record r1
    left join risk_conduct_bureau_rule_type r2 on r1.type = r2.id
    where r1.id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from risk_conduct_bureau_rule_record
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.bayee.political.domain.RiskConductBureauRuleRecord" >
    insert into risk_conduct_bureau_rule_record (id, police_id, type,
                                                 input_time, content, deduction_score,
                                                 scoring_level, scoring_dept, measures,
                                                 remarks, img_arr, is_effective,
                                                 inspector_key, data_origin_flag, creation_date,
                                                 update_date)
    values (#{id,jdbcType=INTEGER}, #{policeId,jdbcType=VARCHAR}, #{type,jdbcType=INTEGER},
            #{inputTime,jdbcType=TIMESTAMP}, #{content,jdbcType=VARCHAR}, #{deductionScore,jdbcType=DOUBLE},
            #{scoringLevel,jdbcType=INTEGER}, #{scoringDept,jdbcType=INTEGER}, #{measures,jdbcType=VARCHAR},
            #{remarks,jdbcType=VARCHAR}, #{imgArr,jdbcType=VARCHAR}, #{isEffective,jdbcType=INTEGER},
            #{inspectorKey,jdbcType=VARCHAR}, #{dataOriginFlag,jdbcType=INTEGER}, #{creationDate,jdbcType=TIMESTAMP},
            #{updateDate,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.bayee.political.domain.RiskConductBureauRuleRecord" >
    insert into risk_conduct_bureau_rule_record
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="policeId != null" >
        police_id,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="inputTime != null" >
        input_time,
      </if>
      <if test="content != null" >
        content,
      </if>
      <if test="deductionScore != null" >
        deduction_score,
      </if>
      <if test="scoringLevel != null" >
        scoring_level,
      </if>
      <if test="scoringDept != null" >
        scoring_dept,
      </if>
      <if test="measures != null" >
        measures,
      </if>
      <if test="remarks != null" >
        remarks,
      </if>
      <if test="imgArr != null" >
        img_arr,
      </if>
      <if test="isEffective != null" >
        is_effective,
      </if>
      <if test="inspectorKey != null" >
        inspector_key,
      </if>
      <if test="dataOriginFlag != null" >
        data_origin_flag,
      </if>
      <if test="creationDate != null" >
        creation_date,
      </if>
      <if test="updateDate != null" >
        update_date,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="policeId != null" >
        #{policeId,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        #{type,jdbcType=INTEGER},
      </if>
      <if test="inputTime != null" >
        #{inputTime,jdbcType=TIMESTAMP},
      </if>
      <if test="content != null" >
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="deductionScore != null" >
        #{deductionScore,jdbcType=DOUBLE},
      </if>
      <if test="scoringLevel != null" >
        #{scoringLevel,jdbcType=INTEGER},
      </if>
      <if test="scoringDept != null" >
        #{scoringDept,jdbcType=INTEGER},
      </if>
      <if test="measures != null" >
        #{measures,jdbcType=VARCHAR},
      </if>
      <if test="remarks != null" >
        #{remarks,jdbcType=VARCHAR},
      </if>
      <if test="imgArr != null" >
        #{imgArr,jdbcType=VARCHAR},
      </if>
      <if test="isEffective != null" >
        #{isEffective,jdbcType=INTEGER},
      </if>
      <if test="inspectorKey != null" >
        #{inspectorKey,jdbcType=VARCHAR},
      </if>
      <if test="dataOriginFlag != null" >
        #{dataOriginFlag,jdbcType=INTEGER},
      </if>
      <if test="creationDate != null" >
        #{creationDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateDate != null" >
        #{updateDate,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.bayee.political.domain.RiskConductBureauRuleRecord" >
    update risk_conduct_bureau_rule_record
    <set >
      <if test="policeId != null" >
        police_id = #{policeId,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="inputTime != null" >
        input_time = #{inputTime,jdbcType=TIMESTAMP},
      </if>
      <if test="content != null" >
        content = #{content,jdbcType=VARCHAR},
      </if>
      <if test="deductionScore != null" >
        deduction_score = #{deductionScore,jdbcType=DOUBLE},
      </if>
      <if test="scoringLevel != null" >
        scoring_level = #{scoringLevel,jdbcType=INTEGER},
      </if>
      <if test="scoringDept != null" >
        scoring_dept = #{scoringDept,jdbcType=INTEGER},
      </if>
      <if test="measures != null" >
        measures = #{measures,jdbcType=VARCHAR},
      </if>
      <if test="remarks != null" >
        remarks = #{remarks,jdbcType=VARCHAR},
      </if>
      <if test="imgArr != null" >
        img_arr = #{imgArr,jdbcType=VARCHAR},
      </if>
      <if test="isEffective != null" >
        is_effective = #{isEffective,jdbcType=INTEGER},
      </if>
      <if test="inspectorKey != null" >
        inspector_key = #{inspectorKey,jdbcType=VARCHAR},
      </if>
      <if test="dataOriginFlag != null" >
        data_origin_flag = #{dataOriginFlag,jdbcType=INTEGER},
      </if>
      <if test="creationDate != null" >
        creation_date = #{creationDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateDate != null" >
        update_date = #{updateDate,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.bayee.political.domain.RiskConductBureauRuleRecord" >
    update risk_conduct_bureau_rule_record
    set police_id = #{policeId,jdbcType=VARCHAR},
        type = #{type,jdbcType=INTEGER},
        input_time = #{inputTime,jdbcType=TIMESTAMP},
        content = #{content,jdbcType=VARCHAR},
        deduction_score = #{deductionScore,jdbcType=DOUBLE},
        scoring_level = #{scoringLevel,jdbcType=INTEGER},
        scoring_dept = #{scoringDept,jdbcType=INTEGER},
        measures = #{measures,jdbcType=VARCHAR},
        remarks = #{remarks,jdbcType=VARCHAR},
        img_arr = #{imgArr,jdbcType=VARCHAR},
        is_effective = #{isEffective,jdbcType=INTEGER},
        inspector_key = #{inspectorKey,jdbcType=VARCHAR},
        data_origin_flag = #{dataOriginFlag,jdbcType=INTEGER},
        creation_date = #{creationDate,jdbcType=TIMESTAMP},
        update_date = #{updateDate,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
  
  <select id="findByPoliceIdAndDate" resultMap="BaseResultMap">
    select
           r1.*, r3.name as type_name ,
        ifnull((select state from risk_record_verify where type_id = 1011 and module_id = r1.id), 0) as appealState
    from risk_conduct_bureau_rule_record r1
        left join risk_conduct_bureau_rule_type r2 on r1.type = r2.id
        left join risk_conduct_bureau_rule_type r3 on r2.parent_id = r3.id
    where r1.police_id = #{policeId}
    <if test="timeType == 1">
            and DATE_FORMAT(r1.creation_date, '%Y-%m')&gt;=#{lastMonthTime} and DATE_FORMAT(r1.creation_date, '%Y-%m')&lt;=#{dateTime}
        </if>
        <if test="timeType == 2">
            and DATE_FORMAT(r1.creation_date, '%Y-%m')=#{dateTime}
        </if>
        ORDER BY r1.creation_date desc
  </select>

  <select id="findRiskConductBureauRuleRecord" resultMap="BaseResultMap">
    select * from risk_conduct_bureau_rule_record
    where is_effective = 1 and police_id = #{policeId}
      and DATE_FORMAT(creation_date, '%Y-%m') = DATE_FORMAT(#{date}, '%Y-%m')
  </select>

  <select id="riskConductBureauRuleRecordPage" resultMap="BaseResultMap">
    select
        r1.*, r3.name as type_name, r4.name as rootName
    from risk_conduct_bureau_rule_record r1
        left join risk_conduct_bureau_rule_type r2 on r1.type = r2.id
        left join risk_conduct_bureau_rule_type r3 on r2.parent_id = r3.id
        left join risk_conduct_bureau_rule_type r4 on r3.parent_id = r4.id
        LEFT JOIN `user` u ON r1.police_id=u.police_id
     where 1 = 1
    <if test="key!=null and key!=''">
      AND (u.name like CONCAT('%',#{key},'%') OR r1.police_id like CONCAT('%',#{key},'%') OR r1.content LIKE CONCAT('%',#{key},'%'))
    </if>
    <if test="list != null and list.size > 0">
      AND (r3.id in (
      <foreach collection="list" item="item" separator=",">
        #{item}
      </foreach>
      ) or r3.parent_id in (
      <foreach collection="list" item="item" separator=",">
        #{item}
      </foreach>
      ))
    </if>
    <if test="deptId != null">
      and u.department_id = #{deptId}
    </if>
    order by r1.id desc
    limit #{pageIndex}, #{pageSize}
  </select>

  <select id="getRiskConductBureauRuleRecordPageCount" resultType="Integer">
    select
      count(1)
    from risk_conduct_bureau_rule_record r1
        left join risk_conduct_bureau_rule_type r2 on r1.type = r2.id
        left join risk_conduct_bureau_rule_type r3 on r2.parent_id = r3.id
        LEFT JOIN `user` u ON r1.police_id=u.police_id
    where 1 = 1
    <if test="key!=null and key!=''">
      AND (u.name like CONCAT('%',#{key},'%') OR r1.police_id like CONCAT('%',#{key},'%') OR r1.content LIKE CONCAT('%',#{key},'%'))
    </if>
    <if test="list != null and list.size > 0">
      AND (r3.id in (
        <foreach collection="list" item="item" separator=",">
          #{item}
        </foreach>
      ) or r3.parent_id in (
        <foreach collection="list" item="item" separator=",">
          #{item}
        </foreach>
      ))
    </if>
    <if test="deptId != null">
      and u.department_id = #{deptId}
    </if>
  </select>

  <select id="countByBureauRuleType" resultType="Integer">
    select count(1) from risk_conduct_bureau_rule_record where type = #{typeId}
  </select>

  <select id="findById" resultType="com.bayee.political.pojo.dto.ConductBureauRuleDetailsDO">
    select
      u.police_id as policeId, u.name as policeName,
      rb.scoring_level as scoringLevel,
      rb.scoring_dept as scoringDept, (select name from department d where d.id = rb.scoring_dept) as scoringDeptName,
      rt2.parent_id as scoringRootType, (select name from risk_conduct_bureau_rule_type where id = rt2.parent_id) as scoringRootTypeName,
      rt.parent_id as scoringType, (select name from risk_conduct_bureau_rule_type where id = rt.parent_id) as scoringTypeName,
      rb.type as scoringOption, rb.content as scoringOptionName,
      rb.measures as measuresName,
      rb.deduction_score as deductScore, DATE_FORMAT(rb.creation_date,'%Y-%m-%d') as date, rb.remarks as remarks, rb.img_arr as imgArr
    from risk_conduct_bureau_rule_record rb
      left join user u on rb.police_id = u.police_id
--       left join measures m on rb.measures = m.id
      left join risk_conduct_bureau_rule_type rt on rt.id = rb.type
      left join risk_conduct_bureau_rule_type rt2 on rt2.id = rt.parent_id
    where rb.id = #{id}
  </select>

  <select id="countAll" resultType="Integer">
    select count(1) from risk_conduct_bureau_rule_record
  </select>

  <select id="getConductBureauChart" resultType="com.bayee.political.domain.ScreenChart">
    select a.id as id, a.name, b.count as value from risk_conduct_bureau_rule_type a
      left join (
      select ptype.parent_id as id, count(1) as count from risk_conduct_bureau_rule_record record
      left join risk_conduct_bureau_rule_type type on record.type = type.id
      left join risk_conduct_bureau_rule_type ptype on type.parent_id = ptype.id
      group by ptype.parent_id) b on a.id = b.id
    where a.parent_id = 0
    order by a.id
  </select>

  <select id="findConductBureauRuleRecordYearAndMonth" resultMap="BaseResultMap">
    select * from risk_conduct_bureau_rule_record a where 1 = 1
    <if test="conductBureauRuleRecordYear != null and conductBureauRuleRecordYear != ''">
      and DATE_FORMAT(creation_date,'%Y') = #{conductBureauRuleRecordYear}
    </if>
    <if test="conductBureauRuleRecordMonth != null and conductBureauRuleRecordMonth != ''">
      and DATE_FORMAT(creation_date,'%m') = #{conductBureauRuleRecordMonth}
    </if>
    <if test="policeId != null and policeId != ''">
      and a.police_id = #{policeId}
    </if>
    order by creation_date desc
  </select>

  <select id="conductBureauRuleReportTypeDOQuery" resultType="com.bayee.political.pojo.RiskReportTypeStatisticsDO">
    SELECT
        CONCAT(brt3.name, ' -> ', brt2.name, ' -> ', brt1.name) as typeName, COUNT(1) as typeCount
    FROM risk_conduct_bureau_rule_record brr
           LEFT JOIN risk_conduct_bureau_rule_type brt1 ON brr.type = brt1.id
           LEFT JOIN risk_conduct_bureau_rule_type brt2 ON brt1.parent_id = brt2.id
           LEFT JOIN risk_conduct_bureau_rule_type brt3 ON brt2.parent_id = brt3.id
    WHERE is_effective = 1 AND `type` IS NOT NULL AND police_id = #{policeId}
    <if test="timeType == 1">
      and DATE_FORMAT(brr.creation_date, '%Y-%m')&gt;=#{lastMonthTime} and DATE_FORMAT(brr.creation_date, '%Y-%m')&lt;=#{dateTime}
    </if>
    <if test="timeType == 2">
      and DATE_FORMAT(brr.creation_date, '%Y-%m')=#{dateTime}
    </if>
    GROUP BY brt2.id
  </select>

  <select id="findIdByInspectorKey" resultType="Integer">
    select id from risk_conduct_bureau_rule_record where inspector_key = #{inspectorKey}
  </select>

</mapper>