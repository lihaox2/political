<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bayee.political.mapper.RiskConductVisitTypeMapper">
  <resultMap id="BaseResultMap" type="com.bayee.political.domain.RiskConductVisitType">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="typeName" jdbcType="VARCHAR" property="typeName" />
    <result column="deduct_score" jdbcType="DOUBLE" property="deductScore" />
    <result column="parent_id" jdbcType="INTEGER" property="parentId" />
    <result column="level" jdbcType="INTEGER" property="level" />
    <result column="creation_date" jdbcType="TIMESTAMP" property="creationDate" />
    <result column="update_date" jdbcType="TIMESTAMP" property="updateDate" />
  </resultMap>
  <sql id="Base_Column_List">
    id, name, parent_id, deduct_score, level, creation_date, update_date
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from risk_conduct_visit_type
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from risk_conduct_visit_type
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.bayee.political.domain.RiskConductVisitType">
    insert into risk_conduct_visit_type (id, name, parent_id, deduct_score
      level, creation_date, update_date
      )
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{parentId,jdbcType=INTEGER}, #{deductScore},
      #{level,jdbcType=INTEGER}, #{creationDate,jdbcType=TIMESTAMP}, #{updateDate,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.bayee.political.domain.RiskConductVisitType">
    insert into risk_conduct_visit_type
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="deductScore != null">
        deduct_score,
      </if>
      <if test="parentId != null">
        parent_id,
      </if>
      <if test="level != null">
        level,
      </if>
      <if test="creationDate != null">
        creation_date,
      </if>
      <if test="updateDate != null">
        update_date,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="deductScore != null">
        #{deductScore},
      </if>
      <if test="parentId != null">
        #{parentId,jdbcType=INTEGER},
      </if>
      <if test="level != null">
        #{level,jdbcType=INTEGER},
      </if>
      <if test="creationDate != null">
        #{creationDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateDate != null">
        #{updateDate,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.bayee.political.domain.RiskConductVisitType">
    update risk_conduct_visit_type
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="deductScore != null">
        deduct_score = #{deductScore},
      </if>
      <if test="parentId != null">
        parent_id = #{parentId,jdbcType=INTEGER},
      </if>
      <if test="level != null">
        level = #{level,jdbcType=INTEGER},
      </if>
      <if test="creationDate != null">
        creation_date = #{creationDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateDate != null">
        update_date = #{updateDate,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.bayee.political.domain.RiskConductVisitType">
    update risk_conduct_visit_type
    set name = #{name,jdbcType=VARCHAR},
        deduct_score = #{deductScore},
      parent_id = #{parentId,jdbcType=INTEGER},
      level = #{level,jdbcType=INTEGER},
      creation_date = #{creationDate,jdbcType=TIMESTAMP},
      update_date = #{updateDate,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
  
  <select id="selectByName" resultType="Integer">
  	select id from	risk_conduct_visit_type where name = #{name}
  </select>

  <select id="riskConductVisitTypePage" resultMap="BaseResultMap">
    select t1.*, t2.`name` typeName from risk_conduct_visit_type t1,
                                         risk_conduct_visit_type t2 where t1.parent_id = t2.id and t2.`level` = 2
    order by creation_date desc
    limit #{pageIndex}, #{pageSize}
  </select>

  <select id="getRiskConductVisitTypePageCount" resultType="Integer">
    select count(1) from risk_conduct_visit_type
  </select>

  <select id="getAllRiskConductVisitType" resultMap="BaseResultMap">
    select * from risk_conduct_visit_type where `level` != 1
  </select>

  <select id="countByNameAndParentId" resultType="Integer">
    select * from risk_conduct_visit_type where name = #{name} and parent_id = #{parentId}
    <if test="id != null">
      and id != #{id}
    </if>
  </select>

</mapper>