<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.bayee.political.mapper.TrainPhysicalProjectRecordMapper" >
  <resultMap id="BaseResultMap" type="com.bayee.political.domain.TrainPhysicalProjectRecord" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="train_physical_id" property="trainPhysicalId" jdbcType="INTEGER" />
    <result column="train_group_id" property="trainGroupId" jdbcType="INTEGER" />
    <result column="train_project" property="trainProject" jdbcType="VARCHAR" />
    <result column="creation_date" property="creationDate" jdbcType="TIMESTAMP" />
    <result column="update_date" property="updateDate" jdbcType="TIMESTAMP" />
    
    <result column="group_name" property="groupName" jdbcType="VARCHAR" />
    <result column="project_name" property="projectName" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, train_physical_id, train_group_id, train_project, creation_date, update_date
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from train_physical_project_record
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from train_physical_project_record
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <!-- 添加组别项目对应 -->
  <insert id="addTrainPhysicalProjectRecord" parameterType="com.bayee.political.domain.TrainPhysicalProjectRecord" >
    insert into train_physical_project_record (train_physical_id, train_group_id, 
      train_project, creation_date, update_date
      )
    values (#{trainPhysicalId,jdbcType=INTEGER}, #{trainGroupId,jdbcType=INTEGER}, 
      #{trainProject,jdbcType=VARCHAR}, #{creationDate,jdbcType=TIMESTAMP}, #{updateDate,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.bayee.political.domain.TrainPhysicalProjectRecord" >
    insert into train_physical_project_record
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="trainPhysicalId != null" >
        train_physical_id,
      </if>
      <if test="trainGroupId != null" >
        train_group_id,
      </if>
      <if test="trainProject != null" >
        train_project,
      </if>
      <if test="creationDate != null" >
        creation_date,
      </if>
      <if test="updateDate != null" >
        update_date,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="trainPhysicalId != null" >
        #{trainPhysicalId,jdbcType=INTEGER},
      </if>
      <if test="trainGroupId != null" >
        #{trainGroupId,jdbcType=INTEGER},
      </if>
      <if test="trainProject != null" >
        #{trainProject,jdbcType=VARCHAR},
      </if>
      <if test="creationDate != null" >
        #{creationDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateDate != null" >
        #{updateDate,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.bayee.political.domain.TrainPhysicalProjectRecord" >
    update train_physical_project_record
    <set >
      <if test="trainPhysicalId != null" >
        train_physical_id = #{trainPhysicalId,jdbcType=INTEGER},
      </if>
      <if test="trainGroupId != null" >
        train_group_id = #{trainGroupId,jdbcType=INTEGER},
      </if>
      <if test="trainProject != null" >
        train_project = #{trainProject,jdbcType=VARCHAR},
      </if>
      <if test="creationDate != null" >
        creation_date = #{creationDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateDate != null" >
        update_date = #{updateDate,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.bayee.political.domain.TrainPhysicalProjectRecord" >
    update train_physical_project_record
    set train_physical_id = #{trainPhysicalId,jdbcType=INTEGER},
      train_group_id = #{trainGroupId,jdbcType=INTEGER},
      train_project = #{trainProject,jdbcType=VARCHAR},
      creation_date = #{creationDate,jdbcType=TIMESTAMP},
      update_date = #{updateDate,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
  
  <!-- 根据多个组别id字符串及体能id查询对应项目 -->
  <select id="trainPhysicalProjectRecordByGroupIds" resultMap="BaseResultMap">
  select a.*,b.`name` as group_name from train_physical_project_record a 
left join train_group b on a.train_group_id = b.id 
where FIND_IN_SET(train_group_id,#{ids})
and train_physical_id = #{id} 
  </select>
  
  <!-- 根据trainPhysicalId删除项目记录 -->
  <delete id="deleteByTrainPhysicalId">
  delete from train_physical_project_record where train_physical_id = #{trainPhysicalId} 
  </delete>
   <!-- 查询当前用户所在组包括的项目 -->
<select id="projectNamesItem" parameterType="com.bayee.political.domain.TrainPhysicalProjectRecord" resultMap="BaseResultMap">
select a.*,b.train_project from(
select a.*,b.name as groupName,b.id from
(select police_id,name,gender,year(now())- year(substring(id_card,7,8)) as age from user) a
left join train_group b on b.sex=a.gender and a.age&gt;=b.min_age and age&lt;=b.max_age
where a.police_id=#{policeId}) a
left join train_physical_project_record b on b.train_group_id=a.id
where b.train_physical_id=#{trainPhysicalId}
  </select>
  
  <select id="getTrainPhysicalProjectRecordByProjectRuleId" resultMap="BaseResultMap">
  select * from train_physical_project_record where train_group_id = (select group_id from train_project_rule where id = #{projectRuleId}) 
and train_project = (select project_id from train_project_rule where id = #{projectRuleId})
  </select>
  
</mapper>