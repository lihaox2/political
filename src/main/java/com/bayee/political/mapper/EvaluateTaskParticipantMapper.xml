<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.bayee.political.mapper.EvaluateTaskParticipantMapper" >
  <resultMap id="BaseResultMap" type="com.bayee.political.domain.EvaluateTaskParticipant" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="task_id" property="taskId" jdbcType="INTEGER" />
    <result column="type" property="type" jdbcType="INTEGER" />
    <result column="police_id" property="policeId" jdbcType="VARCHAR" />
    <result column="head_image" property="headImage" jdbcType="VARCHAR" />
    <result column="department_id" property="departmentId" jdbcType="INTEGER" />
    <result column="department_name" property="departmentName" jdbcType="VARCHAR" />
    <result column="position_id" property="positionId" jdbcType="INTEGER" />
    <result column="position_name" property="positionName" jdbcType="VARCHAR" />
    <result column="object_id" property="objectId" jdbcType="VARCHAR" />
    <result column="object_name" property="objectName" jdbcType="VARCHAR" />
    <result column="description" property="description" jdbcType="VARCHAR" />
    <result column="rank_id" property="rankId" jdbcType="INTEGER" />
    <result column="rank_name" property="rankName" jdbcType="VARCHAR" />
    <result column="rank_detail_id" property="rankDetailId" jdbcType="INTEGER" />
    <result column="rank_detail_name" property="rankDetailName" jdbcType="VARCHAR" />
    <result column="detail_name" property="detailName" jdbcType="VARCHAR" />
    <result column="score" property="score" jdbcType="DOUBLE" />
    <result column="proportion" property="proportion" jdbcType="DOUBLE" />
    <result column="participant_id" property="participantId" jdbcType="INTEGER" />
    <result column="status" property="status" jdbcType="INTEGER" />
    <result column="reason" property="reason" jdbcType="VARCHAR" />
    <result column="operation" property="operation" jdbcType="INTEGER" />
    <result column="is_ignore" property="isIgnore" jdbcType="INTEGER" />
    <result column="creation_date" property="creationDate" jdbcType="TIMESTAMP" />
    <result column="update_date" property="updateDate" jdbcType="TIMESTAMP" />
    
    <result column="name" property="name" jdbcType="VARCHAR" />
  </resultMap>
    <resultMap id="votes" type="com.bayee.political.domain.Vote" >
    <result column="policeNum" property="policeNum" />
    <result column="overNum" property="overNum" />
    <result column="notNum" property="notNum" />
    <result column="invalidNum" property="invalidNum" />
  </resultMap>
   <resultMap id="participantVotes" type="com.bayee.political.domain.ParticipantVote" >
    <result column="participant_id" property="participantId" />
    <result column="policeNum" property="policeNum" />
    <result column="notNum" property="notNum" />
    <result column="validNum" property="validNum" />
    <result column="invalidNum" property="invalidNum" />
    <result column="score" property="score" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, task_id, type, police_id,head_image,department_id,position_id,
    object_id,object_name, description, rank_id,rank_detail_id, score,proportion,
    participant_id, status, reason,operation,is_ignore, 
    creation_date, update_date
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from evaluate_task_participant
    where id = #{id,jdbcType=INTEGER}
  </select>
  <!-- 根据评价id删除评价参与人（后台） -->
  <delete id="evaluateTaskParticipantDalete" parameterType="java.lang.Integer" >
    delete from evaluate_task_participant
    where task_id = #{taskId,jdbcType=INTEGER}
  </delete>
  <!-- 评价参与人新增(api) -->
  <insert id="evaluateTaskParticipantCreat" keyColumn="id" keyProperty="id" parameterType="com.bayee.political.domain.EvaluateTaskParticipant" useGeneratedKeys="true">
	insert into evaluate_task_participant (task_id, type,
	police_id,head_image,department_id,department_name,position_id,position_name,
	object_id,object_name, description,
	rank_id,rank_detail_id, score,proportion,participant_id, status,
	reason,operation,is_ignore,creation_date, update_date
	)
	values (#{taskId,jdbcType=INTEGER}, #{type,jdbcType=INTEGER},
	#{policeId,jdbcType=VARCHAR}, #{objectId,jdbcType=VARCHAR},#{headImage,jdbcType=VARCHAR},
	#{departmentId,jdbcType=INTEGER},#{departmentName,jdbcType=VARCHAR},
	#{positionId,jdbcType=INTEGER},#{positionName,jdbcType=VARCHAR},
	#{objectName,jdbcType=VARCHAR}, #{description,jdbcType=VARCHAR},
	#{rankId,jdbcType=INTEGER},#{rankDetailId,jdbcType=INTEGER}, #{score,jdbcType=DOUBLE},
	#{proportion,jdbcType=DOUBLE},#{participantId,jdbcType=INTEGER},#{status,jdbcType=INTEGER},
	#{reason,jdbcType=VARCHAR},#{operation,jdbcType=INTEGER},#{isIgnore,jdbcType=INTEGER},
	#{creationDate,jdbcType=TIMESTAMP}, #{updateDate,jdbcType=TIMESTAMP}
	)
  </insert>
    <!-- 评价参与人批量新增 -->
  <insert id="evaluateTaskParticipantBatch" keyProperty="id" parameterType="com.bayee.political.domain.EvaluateTaskParticipant" useGeneratedKeys="true">
        insert into evaluate_task_participant (task_id, type, 
      police_id, head_image,department_id,position_id,participant_id,
      object_id,object_name,rank_id, status,proportion,is_ignore, creation_date)
      values 
         <foreach collection="list" index="index" item="item" separator=",">
            (#{item.taskId,jdbcType=INTEGER},#{item.type,jdbcType=INTEGER},
            #{item.policeId,jdbcType=VARCHAR},#{item.headImage,jdbcType=VARCHAR},
	        #{item.departmentId,jdbcType=INTEGER},#{item.positionId,jdbcType=INTEGER},
	        #{item.participantId,jdbcType=INTEGER},
	        #{item.objectId,jdbcType=VARCHAR},#{item.objectName,jdbcType=VARCHAR},
	        #{item.rankId,jdbcType=INTEGER},#{item.status,jdbcType=INTEGER},
	        #{item.proportion,jdbcType=DOUBLE},#{item.isIgnore,jdbcType=INTEGER},
	        #{item.creationDate,jdbcType=TIMESTAMP})
        </foreach>
    </insert>
  <!-- 评价参与人修改(api) -->
  <update id="evaluateTaskParticipantUpdate" parameterType="com.bayee.political.domain.EvaluateTaskParticipant" >
    update evaluate_task_participant
    <set >
      <if test="taskId != null" >
        task_id = #{taskId,jdbcType=INTEGER},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="policeId != null" >
        police_id = #{policeId,jdbcType=VARCHAR},
      </if>
      <if test="objectId != null" >
        object_id = #{objectId,jdbcType=VARCHAR},
      </if>
      <if test="description != null" >
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="rankId != null" >
        rank_id = #{rankId,jdbcType=INTEGER},
      </if>
      <if test="rankDetailId != null" >
        rank_detail_id = #{rankDetailId,jdbcType=INTEGER},
      </if>
      <if test="score != null" >
        score = #{score,jdbcType=DOUBLE},
      </if>
      <if test="proportion != null" >
        proportion = #{proportion,jdbcType=DOUBLE},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="participantId != null" >
        participant_id = #{participantId,jdbcType=INTEGER},
      </if>
      <if test="reason != null" >
        reason = #{reason,jdbcType=VARCHAR},
      </if>
      <if test="operation != null" >
        operation = #{operation,jdbcType=INTEGER},
      </if>
      <if test="isIgnore != null" >
        is_ignore = #{isIgnore,jdbcType=INTEGER},
      </if>
      <if test="creationDate != null" >
        creation_date = #{creationDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateDate != null" >
        update_date = #{updateDate,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.bayee.political.domain.EvaluateTaskParticipant" >
    update evaluate_task_participant
    set task_id = #{taskId,jdbcType=INTEGER},
      type = #{type,jdbcType=INTEGER},
      police_id = #{policeId,jdbcType=VARCHAR},
      object_id = #{objectId,jdbcType=VARCHAR},
      description = #{description,jdbcType=VARCHAR},
      rank_id = #{rankId,jdbcType=INTEGER},
      rank_detail_id = #{rankDetailId,jdbcType=INTEGER},
      score = #{score,jdbcType=DOUBLE},
      status = #{status,jdbcType=INTEGER},
      reason = #{reason,jdbcType=VARCHAR},
      creation_date = #{creationDate,jdbcType=TIMESTAMP},
      update_date = #{updateDate,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <!--根据评价id计算评价任务总条数(api) -->
  <select id="evaluateTaskParticipantTotal" parameterType="com.bayee.political.domain.EvaluateTaskParticipant" resultType="java.lang.Integer">
select ifnull(count(*),0) from(select distinct police_id from evaluate_task_participant where task_id=#{taskId}) as t
</select>
<!--根据评价id计算评价任务已评价条数(api) -->
  <select id="evaluateTaskParticipantOver" parameterType="com.bayee.political.domain.EvaluateTaskParticipant" resultType="java.lang.Integer">
select ifnull(count(*),0) from(select distinct police_id 
from evaluate_task_participant where task_id=#{taskId} and status=1)
as t
</select>
<!--评价对象查询(api) -->
  <select id="objectList" parameterType="com.bayee.political.domain.EvaluateTaskParticipant" resultMap="BaseResultMap">
  select a.*,b.detail_name as detailName,c.position_name,d.name as departmentName,e.num
from evaluate_task_participant a 
left join evaluate_rank_detail b on b.id=a.rank_detail_id 
left join police_position c on c.id=a.position_id 
left join department d on d.id=a.department_id
left join (select count(*) as num,department_id from evaluate_task_participant 
where 1=1 
      <if test="policeId != null and policeId !=''">
        and police_id = #{policeId}
      </if>
      <if test="taskId != null and taskId !=''">
        and task_id = #{taskId}
      </if> 
GROUP BY department_id) e on e.department_id=a.department_id
where 1=1 
     <if test="policeId != null and policeId !=''">
        and a.police_id = #{policeId}
      </if>
      <if test="taskId != null and taskId !=''">
        and a.task_id = #{taskId}
      </if>
      <if test="departmentId != null and departmentId !=''">
        and a.department_id = #{departmentId}
      </if>
      order by ${sort} asc
</select>

<!-- 项目单位 -->
<select id="projectList" parameterType="com.bayee.political.domain.EvaluateTaskParticipant" resultMap="BaseResultMap">
	  select a.*,b.detail_name as detailName,c.position_name,e.num, h.`name` AS department_name 
from evaluate_task_participant a 
left join evaluate_rank_detail b on b.id=a.rank_detail_id 
left join police_position c on c.id=a.position_id 
LEFT JOIN evaluate_project f ON f.`id` = a.`object_id`
LEFT JOIN department h ON f.`department_id` = h.`id` 
left join (select count(*) as num,department_id from evaluate_task_participant 
where 1=1 
      <if test="policeId != null and policeId !=''">
        and police_id = #{policeId}
      </if>
      <if test="taskId != null and taskId !=''">
        and task_id = #{taskId}
      </if> 
GROUP BY department_id) e on e.department_id=a.department_id
where 1=1 
     <if test="policeId != null and policeId !=''">
        and a.police_id = #{policeId}
      </if>
      <if test="taskId != null and taskId !=''">
        and a.task_id = #{taskId}
      </if>
      order by ${sort} asc
</select>
<!--可对项目进行评价的单位负责人列表(后台) -->
  <select id="projectUnitLeaderTaskList" parameterType="com.bayee.political.domain.EvaluateTaskParticipant" resultMap="BaseResultMap">
select a.*,b.target_id,b.rank_id,c.authority_id,c.proportion,d.participant_id,e.police_id,
f.id as objectId,f.project_name as objectName from evaluate_task a
left join evaluate_template b on b.id=a.template_id 
left join evaluate_authority_target c on c.target_id=b.target_id
left join evaluate_authority d on d.id=c.authority_id
join (select *,(case when department_type=2 then 3 else 6 end) as pp_id from user 
where is_disable=0 and is_block=0 and department_type!=1 and is_cadre=1 and is_unit_leader=1) e on e.pp_id=d.participant_id
join evaluate_project f 
where a.id=#{id} and e.is_disable=0 and e.is_block=0
</select> 
<!--可对项目进行评价的民警列表(后台) -->
  <select id="projectTaskList" parameterType="com.bayee.political.domain.EvaluateTaskParticipant" resultMap="BaseResultMap">
select a.*,b.target_id,b.rank_id,c.authority_id,c.proportion,d.participant_id,e.police_id,
f.id as objectId,f.project_name as objectName from evaluate_task a
left join evaluate_template b on b.id=a.template_id 
left join evaluate_authority_target c on c.target_id=b.target_id
left join evaluate_authority d on d.id=c.authority_id
left join user e on e.participant_id=d.participant_id
join evaluate_project f 
where a.id=#{id} and e.is_disable=0 and e.is_block=0
</select> 
<!--可对机关单位进行评价的民警列表(后台) -->
  <select id="officeTaskList" parameterType="com.bayee.political.domain.EvaluateTaskParticipant" resultMap="BaseResultMap">
select a.*,b.target_id,b.rank_id,c.authority_id,c.proportion,d.participant_id,e.police_id,
f.id as objectId,f.name as objectName
from evaluate_task a
left join evaluate_template b on b.id=a.template_id 
left join evaluate_authority_target c on c.target_id=b.target_id
left join evaluate_authority d on d.id=c.authority_id
left join user e on e.participant_id=d.participant_id
join department f
where a.id=#{id} and f.parent_id=2 and e.is_disable=0 and e.is_block=0
</select>
<!--可对派出所进行评价的民警列表(后台) -->
  <select id="policeStationTaskList" parameterType="com.bayee.political.domain.EvaluateTaskParticipant" resultMap="BaseResultMap">
select a.*,b.target_id,b.rank_id,c.authority_id,c.proportion,d.participant_id,e.police_id,
f.id as object_id,f.police_station_name as object_name
from evaluate_task a
left join evaluate_template b on b.id=a.template_id 
left join evaluate_authority_target c on c.target_id=b.target_id
left join evaluate_authority d on d.id=c.authority_id
left join user e on e.participant_id=d.participant_id
join police_station f
where a.id=#{id} and e.is_disable=0 and e.is_block=0
</select>
<!--机关单位中层干部进行评价的民警列表(局领导、派出所负责人)(后台) -->
  <select id="officeLeaderTaskList1" parameterType="com.bayee.political.domain.EvaluateTaskParticipant" resultMap="BaseResultMap">
select a.*,b.target_id,b.rank_id,c.authority_id,c.proportion,d.participant_id,e.police_id,
f.police_id as object_id,f.name as object_name,f.head_image,f.department_id,f.position_id 
from evaluate_task a
left join evaluate_template b on b.id=a.template_id 
left join evaluate_authority_target c on c.target_id=b.target_id
left join evaluate_authority d on d.id=c.authority_id
left join user e on e.participant_id=d.participant_id
join (select * from user where department_type=2 and is_cadre=1 and position_id=#{positionId} and is_disable=0 and is_block=0) as f
where a.id=#{id} and e.is_disable=0 and e.is_block=0 and (e.participant_id=1 or e.participant_id=5)
</select>
<!--机关单位中层干部进行评价的民警列表(机关单位中层干部、机关单位民警)(后台) -->
  <select id="officeLeaderTaskList2" parameterType="com.bayee.political.domain.EvaluateTaskParticipant" resultMap="BaseResultMap">
select a.*,f.police_id as object_id,f.name as object_name,f.head_image,f.position_id
from(select a.*,b.target_id,b.rank_id,c.authority_id,c.proportion,d.participant_id,e.police_id,e.department_id
from evaluate_task a
left join evaluate_template b on b.id=a.template_id 
left join evaluate_authority_target c on c.target_id=b.target_id
left join evaluate_authority d on d.id=c.authority_id
left join user e on e.participant_id=d.participant_id
where a.id=#{id} and e.is_disable=0 and e.is_block=0 and (e.participant_id=3 or e.participant_id=4)) a
left join user f on f.department_id=a.department_id
where f.department_type=2 and f.is_cadre=#{isCadre} and f.is_disable=0 and f.is_block=0
     <if test="positionId != null and positionId !=''">
        and f.position_id=#{positionId}
      </if>
</select>
<!--机关单位中层干部进行评价的民警列表(机关单位负责人)(后台) -->
  <select id="officeLeaderTaskList3" parameterType="com.bayee.political.domain.EvaluateTaskParticipant" resultMap="BaseResultMap">
select a.*,b.target_id,b.rank_id,e.*,g.proportion,g.participant_id
from evaluate_task a
left join evaluate_template b on b.id=a.template_id 
join (select a.police_id,a.department_id,f.police_id as object_id,f.name as object_name,
f.head_image,f.position_id from user a 
left join user f on f.department_id=a.department_id
where a.participant_id=2 and f.department_type=2 and f.is_cadre=#{isCadre} and a.is_disable=0 and a.is_block=0
and f.is_disable=0 and f.is_block=0
    <if test="positionId != null and positionId !=''">
        and f.position_id=#{positionId}
      </if>) e
left join(select a.*,b.target_id,b.rank_id,c.authority_id,c.proportion,d.participant_id
from evaluate_task a
left join evaluate_template b on b.id=a.template_id 
left join evaluate_authority_target c on c.target_id=b.target_id
left join evaluate_authority d on d.id=c.authority_id
where a.id=#{id} and d.participant_id=3) g on g.id=a.id
where a.id=#{id}
</select>
<!--派出所负责人对机关单位民警评价(后台) -->
  <select id="officePoliceTaskList" parameterType="com.bayee.political.domain.EvaluateTaskParticipant" resultMap="BaseResultMap">
select a.*,b.target_id,b.rank_id,c.authority_id,c.proportion,d.participant_id,e.police_id,
f.police_id as object_id,f.name as object_name,f.head_image,f.department_id,f.position_id 
from evaluate_task a
left join evaluate_template b on b.id=a.template_id 
left join evaluate_authority_target c on c.target_id=b.target_id
left join evaluate_authority d on d.id=c.authority_id
left join user e on e.participant_id=d.participant_id
join (select * from user where department_type=2 and is_cadre=0 and is_disable=0 and is_block=0) as f
where a.id=#{id} and e.participant_id=5 and e.is_disable=0 and e.is_block=0
<!-- e.department_type=3 and e.is_unit_leader=1 and e.is_cadre=1 and e.position_id=2 -->
</select>
<!--局领导和机关单位负责人对派出所中层干部评价(后台) -->
  <select id="policeLeaderTaskList1" parameterType="com.bayee.political.domain.EvaluateTaskParticipant" resultMap="BaseResultMap">
select a.*,b.target_id,b.rank_id,c.authority_id,c.proportion,d.participant_id,e.police_id,
f.police_id as object_id,f.name as object_name,f.head_image,f.department_id,f.position_id 
from evaluate_task a
left join evaluate_template b on b.id=a.template_id 
left join evaluate_authority_target c on c.target_id=b.target_id
left join evaluate_authority d on d.id=c.authority_id
left join user e on e.participant_id=d.participant_id
join (select * from user where department_type=3 and is_cadre=1 
and position_id=#{positionId} and is_disable=0 and is_block=0) as f
where a.id=#{id} and e.is_disable=0 and e.is_block=0 and (e.participant_id=1 or e.participant_id=2)
</select>

<!--派出所中层干部和民警对派出所本部中层干部评价(后台) -->
  <select id="policeLeaderTaskList2" parameterType="com.bayee.political.domain.EvaluateTaskParticipant" resultMap="BaseResultMap">
select a.*,f.police_id as object_id,f.name as object_name,f.head_image,f.position_id
from(select a.*,b.target_id,b.rank_id,c.authority_id,c.proportion,d.participant_id,e.police_id,e.department_id
from evaluate_task a
left join evaluate_template b on b.id=a.template_id 
left join evaluate_authority_target c on c.target_id=b.target_id
left join evaluate_authority d on d.id=c.authority_id
left join user e on e.participant_id=d.participant_id
where a.id=#{id} and e.is_disable=0 and e.is_block=0 and (e.participant_id=6 or e.participant_id=7)) a
left join user f on f.department_id=a.department_id
where f.department_type=3 and f.is_cadre=#{isCadre} 
and f.position_id=#{positionId} and f.is_disable=0 and f.is_block=0
</select>
<!--派出所负责人对派出所本部中层干部评价(后台) -->
  <select id="policeLeaderTaskList3" parameterType="com.bayee.political.domain.EvaluateTaskParticipant" resultMap="BaseResultMap">
select a.*,b.target_id,b.rank_id,e.*,g.proportion,g.participant_id
from evaluate_task a
left join evaluate_template b on b.id=a.template_id 
join (select a.police_id,a.department_id,f.police_id as object_id,f.name as object_name,
f.head_image,f.position_id from user a 
left join user f on f.department_id=a.department_id
where a.participant_id=5 and f.department_type=3 
and f.is_cadre=#{isCadre} and f.position_id=#{positionId}
and a.is_disable=0 and a.is_block=0 and f.is_disable=0 and f.is_block=0) e
left join(select a.*,b.target_id,b.rank_id,c.authority_id,c.proportion,d.participant_id
from evaluate_task a
left join evaluate_template b on b.id=a.template_id 
left join evaluate_authority_target c on c.target_id=b.target_id
left join evaluate_authority d on d.id=c.authority_id
where a.id=#{id} and d.participant_id=6) g on g.id=a.id
where a.id=#{id}
</select>
<!-- 可对评议单位进行评价的民警列表(后台) -->
 <select id="commentsTaskList" parameterType="com.bayee.political.domain.EvaluateTaskParticipant" resultMap="BaseResultMap">
select a.*,b.target_id,b.rank_id,c.authority_id,c.proportion,d.participant_id,e.police_id,
f.id as objectId,f.name as objectName from evaluate_task a
left join evaluate_template b on b.id=a.template_id 
left join evaluate_authority_target c on c.target_id=b.target_id
left join evaluate_authority d on d.id=c.authority_id
left join user e on e.participant_id=d.participant_id
join department f 
where a.id=#{id} and f.parent_id=4 and is_unit_leader=1 and e.is_disable=0 and e.is_block=0
</select>


<!-- 获取任务数据列表 -->
<select id="getTaskDataList" parameterType="com.bayee.political.domain.EvaluateTaskParticipant" resultMap="BaseResultMap">
SELECT a.*,CONCAT(b.name,'(',a.police_id,')') AS policeName,
c.detail_name as detailName FROM evaluate_task_participant a 
LEFT JOIN user b ON a.police_id = b.police_id 
LEFT JOIN evaluate_rank_detail c ON a.rank_detail_id = c.id
WHERE a.task_id=#{taskId} and a.status=1 and b.is_disable=0 and b.is_block=0
order by a.rank_detail_id desc,a.reason desc
LIMIT #{pageSize},10
</select>

<select id="getAllObject" parameterType="com.bayee.political.domain.EvaluateTaskParticipant" resultMap="BaseResultMap">
SELECT a.object_name,a.object_id,a.type FROM evaluate_task_participant a 
LEFT JOIN user b ON a.police_id = b.police_id 
LEFT JOIN evaluate_rank_detail c ON a.rank_detail_id = c.id
WHERE a.task_id=#{taskId} and a.status=1 and b.is_disable=0 and b.is_block=0
group by a.object_id order by a.rank_detail_id desc,a.reason desc 
</select>

<select id="getAllParticipants" parameterType="com.bayee.political.domain.EvaluateTaskParticipant" resultMap="BaseResultMap">
SELECT d.`name`,a.police_id,a.type FROM evaluate_task_participant a 
LEFT JOIN user b ON a.police_id = b.police_id 
LEFT JOIN evaluate_rank_detail c ON a.rank_detail_id = c.id 
LEFT JOIN `user` d ON a.police_id = d.police_id 
WHERE a.task_id=#{taskId} and a.status=1 and b.is_disable=0 and b.is_block=0
group by a.police_id order by a.rank_detail_id desc,a.reason desc 
</select>

<select id="taskDataListBySelectParticipants" parameterType="com.bayee.political.domain.EvaluateTaskParticipant" resultMap="BaseResultMap">
SELECT a.*,b.`name`,CONCAT(b.name,'(',a.police_id,')') AS policeName,
c.detail_name as detailName FROM evaluate_task_participant a 
LEFT JOIN user b ON a.police_id = b.police_id 
LEFT JOIN evaluate_rank_detail c ON a.rank_detail_id = c.id 
WHERE a.task_id=#{taskId} and a.status=1 and b.is_disable=0 and b.is_block=0
<if test="objectName!=null and objectName!='全部'">
and b.`name` = #{objectName}
</if> 
<if test="author!=null and author!='全部'">
and a.object_name = #{author} 
</if>
order by a.rank_detail_id desc,a.reason desc 
<if test="pageSize!=null and pageSize!=''">
LIMIT #{pageSize},10
</if>
<if test="pageSize==0">
limit #{pageSize},10
</if>
</select>

<select id="taskDataListByObjName" resultMap="BaseResultMap">
SELECT a.*,CONCAT(b.name,'(',a.police_id,')') AS policeName,
c.detail_name as detailName FROM evaluate_task_participant a 
LEFT JOIN user b ON a.police_id = b.police_id 
LEFT JOIN evaluate_rank_detail c ON a.rank_detail_id = c.id
WHERE a.task_id=#{taskId} and a.status=1 and b.is_disable=0 and b.is_block=0
<if test="objectName!=null and objectName!='全部'">
and a.object_name = #{objectName} 
</if>
<if test="author!=null and author!='全部'">
and b.name = #{author} 
</if>
order by a.rank_detail_id desc,a.reason desc 
<if test="pageSize!=null and pageSize!=''">
LIMIT #{pageSize},10
</if>
<if test="pageSize==0">
limit #{pageSize},10
</if>
</select>

<!-- 获取任务列表总数 -->
<select id="getTaskDataListSum" resultType="java.lang.Integer">
	SELECT COUNT(*) FROM (SELECT a.*,CONCAT(b.name,'(',a.police_id,')') AS policeName,
c.detail_name FROM evaluate_task_participant a 
LEFT JOIN user b ON a.police_id = b.police_id 
LEFT JOIN evaluate_rank_detail c ON a.rank_detail_id = c.id
WHERE a.task_id=#{taskId} and a.status=1 and b.is_disable=0 and b.is_block=0) as t
</select>
<!-- 查询评价得分列表 -->
 <select id="evaluationRankList" parameterType="com.bayee.political.domain.EvaluateTaskParticipant" resultMap="BaseResultMap">
select a.*,c.name as departmentName from(
SELECT obj_new.object_id,obj_new.object_name, obj_new.type,
round(obj_new.num,2) as score, obj_new.rownum as rankNum FROM 
(SELECT obj.object_id,obj.object_name,obj.type, obj.num, @rownum := @rownum + 1 AS num_tmp, @incrnum := CASE WHEN @rowtotal = obj.num THEN @incrnum WHEN @rowtotal := obj.num THEN @rownum END AS rownum 
FROM (select sum(num) as num,object_id,object_name,type from(
select (sum(detail_value)/count(detail_value)*proportion/100) as num,participant_id,object_id,object_name,type from
(select a.*,b.detail_value from evaluate_task_participant a
left join evaluate_rank_detail b on b.id=a.rank_detail_id
where a.task_id=#{taskId} and a.status=1 and (a.operation=1 or a.operation is null)) a 
group by proportion,participant_id,object_id,object_name,type) a GROUP BY object_id,object_name,type
order by sum(num) desc) AS obj, 
(SELECT @rownum := 0 ,@rowtotal := NULL ,@incrnum := 0)r) AS obj_new) as a
left join (select * from user where is_disable=0 and is_block=0) b on b.police_id=a.object_id
left join department c on c.id=b.department_id 
order by a.score desc,a.object_name desc limit #{pageSize},10
</select>

<select id="evaluationRankListByObjName" resultMap="BaseResultMap">
select a.*,c.name as departmentName from(
SELECT obj_new.object_id,obj_new.object_name, obj_new.type,
round(obj_new.num,2) as score, obj_new.rownum as rankNum FROM 
(SELECT obj.object_id,obj.object_name,obj.type, obj.num, @rownum := @rownum + 1 AS num_tmp, @incrnum := CASE WHEN @rowtotal = obj.num THEN @incrnum WHEN @rowtotal := obj.num THEN @rownum END AS rownum 
FROM (select sum(num) as num,object_id,object_name,type from(
select (sum(detail_value)/count(detail_value)*proportion/100) as num,participant_id,object_id,object_name,type from
(select a.*,b.detail_value from evaluate_task_participant a
left join evaluate_rank_detail b on b.id=a.rank_detail_id
where a.task_id=#{taskId} and a.status=1 and (a.operation=1 or a.operation is null) and a.object_name = #{objectName} ) a 
group by proportion,participant_id,object_id,object_name,type) a GROUP BY object_id,object_name,type
order by sum(num) desc) AS obj, 
(SELECT @rownum := 0 ,@rowtotal := NULL ,@incrnum := 0)r) AS obj_new) as a
left join (select * from user where is_disable=0 and is_block=0) b on b.police_id=a.object_id
left join department c on c.id=b.department_id 
order by a.score desc,a.object_name desc 
<if test="pageSize!=null and pageSize!=''">
limit #{pageSize},10
</if>
<if test="pageSize==0">
limit #{pageSize},10
</if>
</select>

<select id="evaluationRankListObjName" parameterType="com.bayee.political.domain.EvaluateTaskParticipant" resultMap="BaseResultMap">
select a.object_name,a.object_id,a.type from(
SELECT obj_new.object_id,obj_new.object_name, obj_new.type,
round(obj_new.num,2) as score, obj_new.rownum as rankNum FROM 
(SELECT obj.object_id,obj.object_name,obj.type, obj.num, @rownum := @rownum + 1 AS num_tmp, @incrnum := CASE WHEN @rowtotal = obj.num THEN @incrnum WHEN @rowtotal := obj.num THEN @rownum END AS rownum 
FROM (select sum(num) as num,object_id,object_name,type from(
select (sum(detail_value)/count(detail_value)*proportion/100) as num,participant_id,object_id,object_name,type from
(select a.*,b.detail_value from evaluate_task_participant a
left join evaluate_rank_detail b on b.id=a.rank_detail_id
where a.task_id=#{taskId} and a.status=1 and (a.operation=1 or a.operation is null)) a 
group by proportion,participant_id,object_id,object_name,type) a GROUP BY object_id,object_name,type
order by sum(num) desc) AS obj, 
(SELECT @rownum := 0 ,@rowtotal := NULL ,@incrnum := 0)r) AS obj_new) as a
left join (select * from user where is_disable=0 and is_block=0) b on b.police_id=a.object_id
left join department c on c.id=b.department_id 
group by a.object_id order by a.score desc,a.object_name desc
</select>

<!-- 查询评价得分列表数量 -->
 <select id="evaluationRankListCount" resultType="java.lang.Integer">
select count(*) from(select a.*,c.name as departmentName from(
SELECT obj_new.object_id,obj_new.object_name, obj_new.num as score, obj_new.rownum as rankNum FROM 
(SELECT obj.object_id,obj.object_name, obj.num, @rownum := @rownum + 1 AS num_tmp, @incrnum := CASE WHEN @rowtotal = obj.num THEN @incrnum WHEN @rowtotal := obj.num THEN @rownum END AS rownum 
FROM (select sum(num) as num,object_id,object_name from(
select (sum(detail_value)/count(detail_value)*proportion/100) as num,participant_id,object_id,object_name from
(select a.*,b.detail_value from evaluate_task_participant a
left join evaluate_rank_detail b on b.id=a.rank_detail_id
where a.task_id=#{taskId} and a.status=1 and (a.operation=1 or a.operation is null)) a 
group by proportion,participant_id,object_id,object_name) a GROUP BY object_id,object_name 
order by sum(num) desc) AS obj, 
(SELECT @rownum := 0 ,@rowtotal := NULL ,@incrnum := 0)r) AS obj_new) as a
left join (select * from user where is_disable=0 and is_block=0) b on b.police_id=a.object_id
left join department c on c.id=b.department_id) as t
</select>
<!-- 查询评价得分列表 -->
 <select id="evaluationRankingItem" parameterType="com.bayee.political.domain.EvaluateTaskParticipant" resultMap="BaseResultMap">
select a.*,c.name as departmentName from(
SELECT obj_new.object_id,obj_new.object_name, obj_new.num as score, obj_new.rownum as rankNum FROM 
(SELECT obj.object_id,obj.object_name, obj.num, @rownum := @rownum + 1 AS num_tmp, @incrnum := CASE WHEN @rowtotal = obj.num THEN @incrnum WHEN @rowtotal := obj.num THEN @rownum END AS rownum 
FROM (select sum(num) as num,object_id,object_name from(
select (sum(detail_value)/count(detail_value)*proportion/100) as num,participant_id,object_id,object_name from
(select a.*,b.detail_value from evaluate_task_participant a
left join evaluate_rank_detail b on b.id=a.rank_detail_id
where a.task_id=#{taskId} and a.status=1 and (a.operation=1 or a.operation is null)) a 
group by proportion,participant_id,object_id,object_name) a GROUP BY object_id,object_name 
order by sum(num) desc) AS obj, 
(SELECT @rownum := 0 ,@rowtotal := NULL ,@incrnum := 0)r) AS obj_new) as a
left join (select * from user where is_disable=0 and is_block=0) b on b.police_id=a.object_id
left join department c on c.id=b.department_id 
where a.object_id=#{objectId}
</select>
<!-- 投票分类数量统计（后台） -->
 <select id="evaluationVoteList" parameterType="com.bayee.political.domain.EvaluateTaskParticipant" resultMap="BaseResultMap">
select count(*) as num,detail_name as detailName,participant_id,
participant_name as participantName,rankDetailId from
(select a.*,b.id as rankDetailId,b.detail_name,c.participant_name from evaluate_task_participant a
left join evaluate_rank_detail b on b.id=a.rank_detail_id
left join evaluate_participant c on c.id=a.participant_id
where a.task_id=#{taskId} and a.object_id=#{objectId} and a.participant_id=#{participantId}
and a.status=1) as t GROUP BY detail_name,participant_id
order by participant_id,detail_name
</select>
<!-- 查询当前任务id中的等级类型（后台） -->
 <select id="voteTypeList" parameterType="com.bayee.political.domain.EvaluateTaskParticipant" resultMap="BaseResultMap">
select b.* from(
select distinct rank_id from evaluate_task_participant where task_id=#{taskId}) a
left join evaluate_rank_detail b on b.rank_id=a.rank_id 
order by b.id
</select>
<!-- 查询当前任务参与人id（后台） -->
 <select id="participantTypeList" parameterType="com.bayee.political.domain.EvaluateTaskParticipant" resultMap="BaseResultMap">
select distinct a.participant_id,b.participant_name as participantName from evaluate_task_participant a
left join evaluate_participant b on b.id=a.participant_id
where a.task_id=#{taskId}
</select>
<!-- 查询当前任务参与人id（后台） -->
 <select id="VoteItem" parameterType="com.bayee.political.domain.Vote" resultMap="votes">
select * from(select  ifnull(count(distinct police_id),0) as policeNum 
from evaluate_task_participant where task_id=#{taskId}) a
join (select  ifnull(count(*),0) as overNum from
(select distinct police_id,status from evaluate_task_participant 
where task_id=#{taskId} and status=1) as t) b
join (select  ifnull(count(*),0) as notNum from
(select distinct police_id,status from evaluate_task_participant 
where task_id=#{taskId} and status=0) as t) c
join (select ifnull(count(*),0) as invalidNum from evaluate_task_participant 
where task_id=#{taskId} and operation=0) d
</select>
<!-- 最新差评查询(后台)(2条) -->
 <select id="homeEvaluationCheckList" parameterType="com.bayee.political.domain.EvaluateTaskParticipant" resultMap="BaseResultMap">
select a.*,b.name as policeName,c.detail_name as detailName from evaluate_task_participant a
left join user b on b.police_id=a.police_id
left join evaluate_rank_detail c on c.id=a.rank_detail_id
where a.reason is not null and IFNULL(a.is_ignore,'') != 1 order by a.id desc
limit 2
</select>
<!-- 判断当前等次详情是否被评价详情列表数据引用(后台) -->
 <select id="existTaskParticipantList" parameterType="com.bayee.political.domain.EvaluateTaskParticipant" resultMap="BaseResultMap">
select * from evaluate_task_participant where rank_detail_id=#{rankDetailId}
</select>
<!-- 根据参与人类别统计各项投票(后台) -->
 <select id="participantVoteList" parameterType="com.bayee.political.domain.ParticipantVote" resultMap="participantVotes">
select a.participant_id,a.anum as policeNum,
b.bnum as notNum,ifnull(c.cnum,0) as validNum,ifnull(d.dnum,0) as invalidNum,enum as score from 
(select count(distinct police_id) as anum,participant_id from  evaluate_task_participant 
where task_id=#{taskId} and object_id=#{objectId} GROUP BY participant_id) as a
left join
(select count(distinct police_id) as bnum,participant_id,status from  evaluate_task_participant 
where task_id=#{taskId} and status=0 and object_id=#{objectId} GROUP BY participant_id,status) as b on b.participant_id=a.participant_id
left join
(select count(*) as cnum,participant_id from evaluate_task_participant 
where task_id=#{taskId} and operation=1 and object_id=#{objectId} group by participant_id) c on c.participant_id=a.participant_id
left join
(select count(*) as dnum,participant_id from evaluate_task_participant 
where task_id=#{taskId} and operation=0 and object_id=#{objectId} group by participant_id) d on d.participant_id=a.participant_id
left join
(select (sum(detail_value)/count(detail_value)*proportion/100) as enum,participant_id,object_id,object_name from
(select a.*,b.detail_value from evaluate_task_participant a
left join evaluate_rank_detail b on b.id=a.rank_detail_id
where a.task_id=#{taskId} and a.status=1 and a.object_id=#{objectId} and (a.operation=1 or a.operation is null)) a 
group by proportion,participant_id,object_id,object_name) e on e.participant_id=a.participant_id
order by a.participant_id 
</select>

<!-- 查询任务是否需要审批(后台) -->
 <select id="operationStatusItem" parameterType="com.bayee.political.domain.EvaluateTaskParticipant" resultMap="BaseResultMap">
<!-- select ifnull(count(*),0) as num,operation from evaluate_task_participant 
where task_id=#{taskId} and reason is not null
GROUP BY operation -->
select ifnull(count(*),0) as num,operation from evaluate_task_participant 
where task_id=#{taskId} and reason is not null and operation is null
</select>
<select id="taskSend" resultMap="BaseResultMap">
	SELECT * FROM evaluate_task_participant 
	WHERE `operation` IS NULL AND `reason` IS NOT NULL GROUP BY `task_id` 
	ORDER BY creation_date DESC LIMIT 2
</select>

<!-- 查询任务是否需要审批(后台) -->
 <select id="taskOversList" parameterType="com.bayee.political.domain.EvaluateTaskParticipant" resultMap="BaseResultMap">
select * from evaluate_task_participant where task_id=#{taskId} and status=0 limit 1
</select>
<!-- 查询任务为项目时项目所属单位 -->
 <select id="projectDepNameItem" parameterType="com.bayee.political.domain.EvaluateTaskParticipant" resultMap="BaseResultMap">
select a.*,c.name as departmentName from evaluate_task_participant a
left join evaluate_project b on b.project_name=a.object_name
left join department c on c.id=b.department_id
where a.id=#{id}
</select>
<!-- 任务参与人名称查询 -->
 <select id="participantNameList" parameterType="com.bayee.political.domain.EvaluateTaskParticipant" resultMap="BaseResultMap">
select distinct a.participant_id,CONCAT(b.participant_name,'评分') as participantName from evaluate_task_participant a
left join evaluate_participant b on b.id=a.participant_id
where a.task_id=#{taskId} order by a.participant_id asc 
</select>
<!-- 名次排名excel导出 -->
 <select id="rankSaveExcelList" parameterType="com.bayee.political.domain.EvaluateTaskParticipant" resultMap="BaseResultMap">
select a.*,c.name as departmentName from(
SELECT obj_new.object_id,obj_new.object_name, obj_new.type,
round(obj_new.num,2) as score, obj_new.rownum as rankNum FROM 
(SELECT obj.object_id,obj.object_name,obj.type, obj.num, @rownum := @rownum + 1 AS num_tmp, @incrnum := CASE WHEN @rowtotal = obj.num THEN @incrnum WHEN @rowtotal := obj.num THEN @rownum END AS rownum 
FROM (select sum(num) as num,object_id,object_name,type from(
select (sum(detail_value)/count(detail_value)*proportion/100) as num,participant_id,object_id,object_name,type from
(select a.*,b.detail_value from evaluate_task_participant a
left join evaluate_rank_detail b on b.id=a.rank_detail_id
where a.task_id=#{taskId} and a.status=1 and (a.operation=1 or a.operation is null)) a 
group by proportion,participant_id,object_id,object_name,type) a GROUP BY object_id,object_name,type
order by sum(num) desc) AS obj, 
(SELECT @rownum := 0 ,@rowtotal := NULL ,@incrnum := 0)r) AS obj_new) as a
left join (select * from user where is_disable=0 and is_block=0) b on b.police_id=a.object_id
left join department c on c.id=b.department_id 
where 1=1 
      <if test="objectName != null and objectName !=''">
        and a.object_name=#{objectName}
      </if>
      <if test="departmentId != null and departmentId !=''">
        and c.id=#{departmentId}
      </if>
order by a.score desc,a.object_name desc
</select>
<!-- 个人评分详细数据查询 -->
 <select id="rankItemList" parameterType="com.bayee.political.domain.ParticipantVote" resultMap="participantVotes">
select round((sum(detail_value)/count(detail_value)*proportion/100),2) as score,
participant_id,object_id,object_name from
(select a.*,b.detail_value from evaluate_task_participant a
left join evaluate_rank_detail b on b.id=a.rank_detail_id
where a.task_id=#{taskId} and a.status=1 and a.object_id=#{objectId} and (a.operation=1 or a.operation is null)) a 
group by proportion,participant_id,object_id,object_name
ORDER BY participant_id asc
</select>
</mapper>