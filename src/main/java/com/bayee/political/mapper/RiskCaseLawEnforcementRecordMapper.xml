<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bayee.political.mapper.RiskCaseLawEnforcementRecordMapper">
  <resultMap id="BaseResultMap" type="com.bayee.political.domain.RiskCaseLawEnforcementRecord">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="police_id" jdbcType="VARCHAR" property="policeId" />
    <result column="type" jdbcType="INTEGER" property="type" />
    <result column="content" jdbcType="VARCHAR" property="content" />
    <result column="input_time" jdbcType="TIMESTAMP" property="inputTime" />
    <result column="dept_name" jdbcType="VARCHAR" property="deptName" />
    <result column="case_code" jdbcType="VARCHAR" property="caseCode" />
    <result column="deduction_score" jdbcType="DOUBLE" property="deductionScore" />
    <result column="creation_date" jdbcType="TIMESTAMP" property="creationDate" />
    <result column="update_date" jdbcType="TIMESTAMP" property="updateDate" />
    <result column="name" jdbcType="VARCHAR" property="typeName" />
  </resultMap>
  <sql id="Base_Column_List">
    id, police_id, type, content, input_time, deduction_score, dept_name, case_code, creation_date, update_date
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select a.*,b.name as typeName from risk_case_law_enforcement_record a
    left join risk_case_law_enforcement_type b on b.id = a.type
    where a.id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from risk_case_law_enforcement_record
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.bayee.political.domain.RiskCaseLawEnforcementRecord">
    insert into risk_case_law_enforcement_record (id, police_id, type, 
      content, input_time, deduction_score, dept_name, case_code,
      creation_date, update_date)
    values (#{id,jdbcType=INTEGER}, #{policeId,jdbcType=VARCHAR}, #{type,jdbcType=INTEGER}, 
      #{content,jdbcType=VARCHAR}, #{inputTime,jdbcType=TIMESTAMP}, #{deductionScore,jdbcType=DOUBLE},
      #{deptName}, #{caseCode},
      #{creationDate,jdbcType=TIMESTAMP}, #{updateDate,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.bayee.political.domain.RiskCaseLawEnforcementRecord">
    insert into risk_case_law_enforcement_record
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="policeId != null">
        police_id,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="content != null">
        content,
      </if>
      <if test="inputTime != null">
        input_time,
      </if>
      <if test="deductionScore != null">
        deduction_score,
      </if>
        <if test="deptName != null">
          dept_name,
        </if>
        <if test="caseCode != null">
          case_code,
        </if>
      <if test="creationDate != null">
        creation_date,
      </if>
      <if test="updateDate != null">
        update_date,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="policeId != null">
        #{policeId,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        #{type,jdbcType=INTEGER},
      </if>
      <if test="content != null">
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="inputTime != null">
        #{inputTime,jdbcType=TIMESTAMP},
      </if>
      <if test="deductionScore != null">
        #{deductionScore,jdbcType=DOUBLE},
      </if>
      <if test="deptName != null">
        #{deptName},
      </if>
      <if test="caseCode != null">
        #{caseCode},
      </if>
      <if test="creationDate != null">
        #{creationDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateDate != null">
        #{updateDate,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.bayee.political.domain.RiskCaseLawEnforcementRecord">
    update risk_case_law_enforcement_record
    <set>
      <if test="policeId != null">
        police_id = #{policeId,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=VARCHAR},
      </if>
      <if test="inputTime != null">
        input_time = #{inputTime,jdbcType=TIMESTAMP},
      </if>
      <if test="deductionScore != null">
        deduction_score = #{deductionScore,jdbcType=DOUBLE},
      </if>
      <if test="deptName != null">
        dept_name = #{deptName},
      </if>
      <if test="caseCode != null">
        case_code = #{caseCode},
      </if>
      <if test="creationDate != null">
        creation_date = #{creationDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateDate != null">
        update_date = #{updateDate,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.bayee.political.domain.RiskCaseLawEnforcementRecord">
    update risk_case_law_enforcement_record
    set police_id = #{policeId,jdbcType=VARCHAR},
      type = #{type,jdbcType=INTEGER},
      content = #{content,jdbcType=VARCHAR},
      input_time = #{inputTime,jdbcType=TIMESTAMP},
      deduction_score = #{deductionScore,jdbcType=DOUBLE},
        dept_name = #{deptName},
        case_code = #{caseCode},
      creation_date = #{creationDate,jdbcType=TIMESTAMP},
      update_date = #{updateDate,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
  
  
  <select id="riskCaseLawEnforcementRecordList" resultMap="BaseResultMap">
    select a.id,a.police_id,a.type,a.content,a.input_time,a.creation_date,b.name as typeName,a.deduction_score from risk_case_law_enforcement_record a
    left join risk_case_law_enforcement_type b on b.id=a.type
    where a.police_id=#{policeId,jdbcType=VARCHAR}
    <if test="timeType == 1">
      and DATE_FORMAT(a.creation_date, '%Y-%m')&gt;=#{lastMonthTime} and DATE_FORMAT(a.creation_date, '%Y-%m')&lt;=#{dateTime}
    </if>
    <if test="timeType == 2">
      and DATE_FORMAT(a.creation_date, '%Y-%m')=#{dateTime}
    </if>
    order by a.id desc
  </select>

  <select id="countPoliceCaseData" resultType="Integer">
    select count(1) from risk_case_law_enforcement_record
    where police_id = #{policeId} and DATE_FORMAT(creation_date, '%Y-%m') = DATE_FORMAT(#{date}, '%Y-%m')
  </select>

  <select id="findPoliceAvgDeductionScoreByDate" resultType="Double">
    select
           ifnull(TRUNCATE((sum(deduction_score) * 10) / (select count(1) from risk_case_law_enforcement
                where DATE_FORMAT(creation_date, '%Y-%m') = DATE_FORMAT(#{date}, '%Y-%m')), 2), 0) as avg_score
    from risk_case_law_enforcement_record
    where DATE_FORMAT(creation_date, '%Y-%m') = DATE_FORMAT(#{date}, '%Y-%m');
  </select>

  <select id="findPoliceCaseData" resultMap="BaseResultMap">
    select * from risk_case_law_enforcement_record
    where police_id = #{policeId} and DATE_FORMAT(creation_date, '%Y-%m') = DATE_FORMAT(#{date}, '%Y-%m')
  </select>

  <select id="riskCaseLawEnforcementRecordPage" resultType="com.bayee.political.pojo.dto.CaseLawEnforcementPageDO">
    select
        record.id as id, record.police_id as policeId, u.name as policeName, record.dept_name as deptName,
        record.case_code as caseCode, parend_type.name as typeName, type.name as content, record.content as `desc`,
        record.deduction_score as deductScore, DATE_FORMAT(record.creation_date, '%Y-%m-%d %H:%i:%s') as date
    from risk_case_law_enforcement_record record
    left join user u on record.police_id = u.police_id
    left join risk_case_law_enforcement_type type on type.id = record.type
    left join risk_case_law_enforcement_type parend_type on type.parent_id = parend_type.id
    where 1 = 1
    <if test="key != null and key != ''">
        and (u.police_id like concat('%', #{key}, '%') or u.name like concat('%', #{key}, '%') or record.content like concat('%', #{key}, '%'))
    </if>
    <if test="list != null and list.size > 0">
        and (type.id in (
        <foreach collection="list" item="value" separator=",">
          #{value }
        </foreach>
      ) or parend_type.id in (
      <foreach collection="list" item="value" separator=",">
        #{value }
      </foreach>
      ))
    </if>
    order by record.id desc
    limit #{pageIndex}, #{pageSize}
  </select>

  <select id="riskCaseLawEnforcementRecordPageCount" resultType="Integer">
    select
        count(1)
    from risk_case_law_enforcement_record record
    left join user u on record.police_id = u.police_id
    left join risk_case_law_enforcement_type type on type.id = record.type
    left join risk_case_law_enforcement_type parend_type on type.parent_id = parend_type.id
    where 1 = 1
    <if test="key != null and key != ''">
      and (u.police_id like concat('%', #{key}, '%') or u.name like concat('%', #{key}, '%') or record.content like concat('%', #{key}, '%'))
    </if>
    <if test="list != null and list.size > 0">
      and (type.id in (
      <foreach collection="list" item="value" separator=",">
        #{value }
      </foreach>
      ) or parend_type.id in (
      <foreach collection="list" item="value" separator=",">
        #{value }
      </foreach>
      ))
    </if>
  </select>

  <select id="findDetailsDOById" resultType="com.bayee.political.pojo.dto.CaseLawEnforcementDetailsDO">
    select
        record.police_id as policeId, u.name as policeName, record.dept_name as deptName, record.case_code as caseCode,
        parend_type.id as parentId, parend_type.name as parentName, type.id as typeId, type.name as typeName,
        record.content, record.deduction_score as deductScore,
        DATE_FORMAT(record.creation_date, '%Y-%m-%d %H:%i:%s') as date
    from risk_case_law_enforcement_record record
      left join user u on record.police_id = u.police_id
      left join risk_case_law_enforcement_type type on type.id = record.type
      left join risk_case_law_enforcement_type parend_type on type.parent_id = parend_type.id
    where record.id = #{id}
  </select>

  <select id="countAll" resultType="Integer">
    select count(1) from risk_case_law_enforcement_record
  </select>

</mapper>