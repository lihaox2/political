<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.bayee.political.mapper.GroupManagementMapper" >
  <resultMap id="BaseResultMap" type="com.bayee.political.domain.GroupManagement" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="group_name" property="groupName" jdbcType="VARCHAR" />
    <result column="description" property="description" jdbcType="VARCHAR" />
    <result column="group_num" property="groupNum" jdbcType="INTEGER" />
    <result column="user_ids" property="userIds" jdbcType="VARCHAR" />
    <result column="police_ids" property="policeIds" jdbcType="VARCHAR" />
    <result column="is_stop" property="isStop" jdbcType="INTEGER" />
    <result column="creation_date" property="creationDate" jdbcType="TIMESTAMP" />
    <result column="update_date" property="updateDate" jdbcType="TIMESTAMP" />
    
    <result column="num" property="num" jdbcType="TIMESTAMP" />
    
  </resultMap>
  <sql id="Base_Column_List" >
    id, group_name, description, group_num, user_ids, police_ids, is_stop, creation_date, 
    update_date
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from group_management
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from group_management
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.bayee.political.domain.GroupManagement" >
    insert into group_management (id, group_name, description, 
      group_num, user_ids, police_ids, 
      is_stop, creation_date, update_date
      )
    values (#{id,jdbcType=INTEGER}, #{groupName,jdbcType=VARCHAR}, #{description,jdbcType=VARCHAR}, 
      #{groupNum,jdbcType=INTEGER}, #{userIds,jdbcType=VARCHAR}, #{policeIds,jdbcType=VARCHAR}, 
      #{isStop,jdbcType=INTEGER}, #{creationDate,jdbcType=TIMESTAMP}, #{updateDate,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.bayee.political.domain.GroupManagement" >
    insert into group_management
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="groupName != null" >
        group_name,
      </if>
      <if test="description != null" >
        description,
      </if>
      <if test="groupNum != null" >
        group_num,
      </if>
      <if test="userIds != null" >
        user_ids,
      </if>
      <if test="policeIds != null" >
        police_ids,
      </if>
      <if test="isStop != null" >
        is_stop,
      </if>
      <if test="creationDate != null" >
        creation_date,
      </if>
      <if test="updateDate != null" >
        update_date,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="groupName != null" >
        #{groupName,jdbcType=VARCHAR},
      </if>
      <if test="description != null" >
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="groupNum != null" >
        #{groupNum,jdbcType=INTEGER},
      </if>
      <if test="userIds != null" >
        #{userIds,jdbcType=VARCHAR},
      </if>
      <if test="policeIds != null" >
        #{policeIds,jdbcType=VARCHAR},
      </if>
      <if test="isStop != null" >
        #{isStop,jdbcType=INTEGER},
      </if>
      <if test="creationDate != null" >
        #{creationDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateDate != null" >
        #{updateDate,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.bayee.political.domain.GroupManagement" >
    update group_management
    <set >
      <if test="groupName != null" >
        group_name = #{groupName,jdbcType=VARCHAR},
      </if>
      <if test="description != null" >
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="groupNum != null" >
        group_num = #{groupNum,jdbcType=INTEGER},
      </if>
      <if test="userIds != null" >
        user_ids = #{userIds,jdbcType=VARCHAR},
      </if>
      <if test="policeIds != null" >
        police_ids = #{policeIds,jdbcType=VARCHAR},
      </if>
      <if test="isStop != null" >
        is_stop = #{isStop,jdbcType=INTEGER},
      </if>
      <if test="creationDate != null" >
        creation_date = #{creationDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateDate != null" >
        update_date = #{updateDate,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.bayee.political.domain.GroupManagement" >
    update group_management
    set group_name = #{groupName,jdbcType=VARCHAR},
      description = #{description,jdbcType=VARCHAR},
      group_num = #{groupNum,jdbcType=INTEGER},
      user_ids = #{userIds,jdbcType=VARCHAR},
      police_ids = #{policeIds,jdbcType=VARCHAR},
      is_stop = #{isStop,jdbcType=INTEGER},
      creation_date = #{creationDate,jdbcType=TIMESTAMP},
      update_date = #{updateDate,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <!-- 群主列表 -->
  <select id="groupManagementList" parameterType="com.bayee.political.domain.GroupManagement" resultMap="BaseResultMap">
	SELECT a.*,b.num FROM group_management a 
	LEFT JOIN(SELECT COUNT(*) AS num,group_id FROM `user` where group_id is not null
    and is_disable=0 GROUP BY group_id) b 
	ON b.group_id=a.id WHERE 1 = 1 
	<if test="searchValue != null and searchValue != '' ">
	 AND CONCAT(a.`group_name`,a.`description`) LIKE CONCAT('%',#{searchValue},'%') 
	</if>
	LIMIT #{pageSize},10
</select>

<select id="groupManagementSum" resultType="java.lang.Integer">
	SELECT COUNT(*) FROM group_management
</select>

<insert id="addGroup" >
	INSERT INTO group_management(group_name, description, creation_date, update_date) 
	VALUES (#{groupName}, #{description}, NOW(), NOW())
</insert>


<insert id="groupCreat" keyColumn="id" keyProperty="id" parameterType="com.bayee.political.domain.GroupManagement" useGeneratedKeys="true">
	INSERT INTO group_management(group_name, description, creation_date, update_date) 
	VALUES (#{groupName}, #{description}, NOW(), NOW())
</insert>

<update id="updateUserGroup">
	UPDATE `user` SET `user`.`group_id` = #{groupId} WHERE `user`.`police_id` = #{policeId}
</update>

<insert id="addEvaluateParticipant">
	INSERT INTO evaluate_participant(id, participant_name) VALUES(#{groupId}, #{groupName})
</insert>

<delete id="deleteGroup">
	DELETE FROM evaluate_participant WHERE evaluate_participant.`id` = #{groupId};
	DELETE FROM group_management WHERE group_management.`id` = #{groupId};
	UPDATE `user` SET `user`.`group_id` = NULL WHERE `user`.`group_id` = #{groupId}
</delete>

<select id="getGroupById" resultMap="BaseResultMap">
	SELECT * FROM group_management WHERE group_management.`id` = #{groupId}
</select>

<update id="changeGroupId">
UPDATE `user` SET `user`.`group_id` = #{groupId} WHERE `user`.`id` = #{id}
</update>

<update id="changeParticipantByGroupId">
UPDATE evaluate_participant SET evaluate_participant.`participant_name` = #{groupName} WHERE evaluate_participant.`id` = #{participantId};
UPDATE group_management SET group_management.`group_name` = #{groupName},group_management.`description` = #{description},group_management.`update_date` = NOW() WHERE group_management.`id` = #{participantId}
</update>

<select id="getAllGroupManagement" resultMap="BaseResultMap">
	SELECT a.*,b.num FROM group_management a 
	LEFT JOIN(SELECT COUNT(*) AS num,group_id FROM `user` where group_id is not null
and is_disable=0
GROUP BY group_id) b 
	ON b.group_id=a.id WHERE 1 = 1 
</select>

</mapper>