<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.bayee.political.mapper.FeedbackMapper" >
  <resultMap id="BaseResultMap" type="com.bayee.political.domain.Feedback" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="police_id" property="policeId" jdbcType="VARCHAR" />
    <result column="type" property="type" jdbcType="INTEGER" />
    <result column="opinion" property="opinion" jdbcType="VARCHAR" />
    <result column="images" property="images" jdbcType="VARCHAR" />
    <result column="creation_date" property="creationDate" jdbcType="TIMESTAMP" />
    <result column="update_date" property="updateDate" jdbcType="TIMESTAMP" />
    
    <result column="user_name" property="userName" />
    <result column="department_name" property="departmentName" />
    
  </resultMap>
  <sql id="Base_Column_List" >
    id, police_id, type, opinion, images, creation_date, update_date
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from feedback
    where id = #{id,jdbcType=INTEGER}
  </select>
  <!-- 反馈意见删除(api) -->
  <delete id="feedbackApiDelete" parameterType="java.lang.Integer" >
    delete from feedback
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <!-- 反馈意见新增(api) -->
  <insert id="feedbackApiCreat" keyColumn="id" keyProperty="id" parameterType="com.bayee.political.domain.Feedback" useGeneratedKeys="true">
    insert into feedback (police_id, type, 
      opinion, images, creation_date, 
      update_date)
    values (#{policeId,jdbcType=VARCHAR}, #{type,jdbcType=INTEGER}, 
      #{opinion,jdbcType=VARCHAR}, #{images,jdbcType=VARCHAR}, #{creationDate,jdbcType=TIMESTAMP}, 
      #{updateDate,jdbcType=TIMESTAMP})
  </insert>
  <!-- 反馈意见修改(api) -->
  <update id="feedbackApiUpdate" parameterType="com.bayee.political.domain.Feedback" >
    update feedback
    <set >
      <if test="policeId != null" >
        police_id = #{policeId,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="opinion != null" >
        opinion = #{opinion,jdbcType=VARCHAR},
      </if>
      <if test="images != null" >
        images = #{images,jdbcType=VARCHAR},
      </if>
      <if test="creationDate != null" >
        creation_date = #{creationDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateDate != null" >
        update_date = #{updateDate,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.bayee.political.domain.Feedback" >
    update feedback
    set police_id = #{policeId,jdbcType=VARCHAR},
      type = #{type,jdbcType=INTEGER},
      opinion = #{opinion,jdbcType=VARCHAR},
      images = #{images,jdbcType=VARCHAR},
      creation_date = #{creationDate,jdbcType=TIMESTAMP},
      update_date = #{updateDate,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <!-- 反馈意见列表查询（api） -->
   <select id="feedbackApiList" parameterType="com.bayee.political.domain.Feedback" resultMap="BaseResultMap">
select * from feedback where police_id=#{policeId} order by id desc
</select>

<select id="getFeedback" resultMap="BaseResultMap">
	SELECT b.`name` AS user_name,b.`police_id`,c.`name` AS department_name,a.`images`,a.`opinion`,a.`creation_date`,
	a.`id`  
	FROM feedback a LEFT JOIN `user` b ON a.`police_id` = b.`police_id` 
	LEFT JOIN department c ON c.`id` = b.`department_id` WHERE 1 = 1 
	<if test="departmentId != null and departmentId != '' ">
		and c.id = #{departmentId}
	</if>
	<if test="searchValue != null and searchValue != '' ">
		AND (b.`name` like "%"#{searchValue}"%" or a.`police_id` like "%"#{searchValue}"%" or a.`opinion` like "%"#{searchValue}"%")
	</if>
	order by a.id desc
	 LIMIT #{pageSize},10
</select>

<select id="getFeedbackSum" resultType="java.lang.Integer">
	SELECT COUNT(*) FROM (SELECT b.`name` AS user_name,b.`police_id`,c.`name` AS department_name,a.`images`,a.`opinion`,a.`creation_date`,
	a.`id`  
	FROM feedback a LEFT JOIN `user` b ON a.`police_id` = b.`police_id` 
	LEFT JOIN department c ON c.`id` = b.`department_id` WHERE 1 = 1 
	<if test="departmentId != null and departmentId != '' ">
		and c.id = #{departmentId}
	</if>
	<if test="searchValue != null and searchValue != '' ">
		AND (b.`name` like "%"#{searchValue}"%" or a.`police_id` like "%"#{searchValue}"%" or a.`opinion` like "%"#{searchValue}"%")
	</if>) as t
</select>
<select id="getFeedbackById" resultMap="BaseResultMap">
	SELECT b.`name` AS user_name,b.`police_id`,c.`name` AS department_name,a.`images`,a.`opinion`,a.`creation_date` 
	FROM feedback a LEFT JOIN `user` b ON a.`police_id` = b.`police_id` 
	LEFT JOIN department c ON c.`id` = b.`department_id` WHERE a.`id` = #{id}
</select>

</mapper>